/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/render.js":
/*!********************************!*\
  !*** ./resources/js/render.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var _this4 = this;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CardView =\n/*#__PURE__*/\nfunction () {\n  function CardView() {\n    var baseWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n\n    _classCallCheck(this, CardView);\n\n    this.app = new PIXI.Application({\n      width: baseWidth,\n      height: baseWidth / 0.7159,\n      transparent: true\n    });\n    this.frame = new PIXI.Sprite();\n    this.rarityStone = new PIXI.Sprite();\n    this.gold = new PIXI.Sprite();\n    this.attack = new PIXI.Sprite();\n    this.image = new PIXI.Sprite();\n    this.defense = new PIXI.Sprite();\n    this.title = new PIXI.Text(\"\");\n    this.category = new PIXI.Text(\"\");\n    this.info = new PIXI.Text(\"\");\n    this.goldText = new PIXI.Text(\"\");\n    this.attackText = new PIXI.Text(\"\");\n    this.defenseText = new PIXI.Text(\"\");\n    this.container = new PIXI.Container();\n    this.setAttackSymbol(PIXI.Texture.fromImage('/data/AttackIcon.png'));\n    this.setDefenseSymbol(PIXI.Texture.fromImage('/data/DefenseIcon.png'));\n    this.container.addChild(this.image);\n    this.container.filters = [new PIXI.filters.AlphaFilter()];\n    this.setFrame(PIXI.Texture.fromImage(\"/data/Frame.png\"));\n    this.setGoldSymbol(PIXI.Texture.fromImage('/data/Gold.png'));\n    this.app.stage.addChild(this.container);\n    this.app.stage.addChild(this.frame);\n    this.app.stage.addChild(this.rarityStone);\n    this.app.stage.addChild(this.gold);\n    this.app.stage.addChild(this.attack);\n    this.app.stage.addChild(this.defense);\n    this.app.stage.addChild(this.title);\n    this.app.stage.addChild(this.category);\n    this.app.stage.addChild(this.info);\n    this.app.stage.addChild(this.attackText);\n    this.app.stage.addChild(this.defenseText);\n    this.app.stage.addChild(this.goldText);\n    this.costs = [];\n    this.bio_tex = PIXI.Texture.fromImage('/data/ManaCrystalGreen.png');\n    this.ene_tex = PIXI.Texture.fromImage('/data/ManaCrystalBlue.png');\n    this.par_tex = PIXI.Texture.fromImage('/data/ManaCrystalRed.png');\n    this.art_tex = PIXI.Texture.fromImage('/data/ManaCrystalBlack.png');\n    this.neu_tex = PIXI.Texture.fromImage('/data/ManaCrystalNeutral.png');\n    this.setWidths(baseWidth);\n    this.setStyles();\n    this.setImageFrame();\n  }\n\n  _createClass(CardView, [{\n    key: \"setStyles\",\n    value: function setStyles() {\n      var base = {\n        fontFamily: \"Arial\",\n        fontSize: 36,\n        fontWeight: \"normal\",\n        fill: \"white\",\n        stroke: 'black',\n        strokeThickness: 4,\n        dropShadow: false,\n        dropShadowColor: \"#000000\",\n        dropShadowBlur: 4,\n        dropShadowAngle: Math.PI / 6,\n        dropShadowDistance: 6\n      };\n      this.title.style = new PIXI.TextStyle(base);\n      var category = jQuery.extend({}, base);\n      category.fontSize = 26;\n      this.category.style = new PIXI.TextStyle(category);\n      var info = jQuery.extend({}, base);\n      info.fill = \"grey\";\n      info.stroke = \"grey\";\n      info.fontSize = 18;\n      info.strokeThickness = 0;\n      this.info.style = new PIXI.TextStyle(info);\n      var stat = jQuery.extend({}, base);\n      stat.fontWeight = \"bold\";\n      this.goldText.style = new PIXI.TextStyle(stat);\n      this.attackText.style = new PIXI.TextStyle(stat);\n      this.defenseText.style = new PIXI.TextStyle(stat);\n    }\n  }, {\n    key: \"setWidths\",\n    value: function setWidths(baseWidth) {\n      this.app.width = baseWidth;\n      this.app.height = baseWidth / 0.7159;\n      this.frame.width = baseWidth;\n      this.frame.height = baseWidth / 0.7159;\n      this.frame.x = 0;\n      this.frame.y = 0;\n      this.rarityStone.width = baseWidth / 7.875;\n      this.rarityStone.height = baseWidth / 9;\n      this.rarityStone.x = baseWidth / 8.4;\n      this.rarityStone.y = baseWidth / 1.1667;\n      this.gold.width = baseWidth / 6.848;\n      this.gold.height = baseWidth / 6.848;\n      this.gold.anchor.x = 0.5;\n      this.gold.anchor.y = 0.5;\n      this.gold.x = baseWidth / 1.117;\n      this.gold.y = baseWidth / 8.873;\n      this.attack.x = baseWidth / 11;\n      this.attack.y = baseWidth / 0.78;\n      this.attack.width = baseWidth / 6.06;\n      this.attack.height = baseWidth / 5.43;\n      this.attack.anchor.x = 0.5;\n      this.attack.anchor.y = 0.5;\n      this.defense.x = baseWidth / 1.1;\n      this.defense.y = baseWidth / 0.77;\n      this.defense.width = baseWidth / 6.85;\n      this.defense.height = baseWidth / 5.833;\n      this.defense.anchor.x = 0.5;\n      this.defense.anchor.y = 0.5;\n      this.title.x = baseWidth / 2.35;\n      this.title.y = baseWidth / 6.5;\n      this.title.anchor.x = 0.5;\n      this.title.anchor.y = 0.5;\n      this.category.x = baseWidth / 1.56;\n      this.category.y = baseWidth / 1.1;\n      this.category.anchor.x = 0.5;\n      this.category.anchor.y = 0.5;\n      this.info.rotation = Math.PI / 2;\n      this.info.x = baseWidth / 17;\n      this.info.y = baseWidth / 7.5;\n      this.goldText.x = baseWidth / 1.12;\n      this.goldText.y = baseWidth / 8.87;\n      this.goldText.anchor.x = 0.5;\n      this.goldText.anchor.y = 0.5;\n      this.attackText.x = baseWidth / 11;\n      this.attackText.y = baseWidth / 0.78;\n      this.attackText.anchor.x = 0.5;\n      this.attackText.anchor.y = 0.5;\n      this.defenseText.x = baseWidth / 1.1;\n      this.defenseText.y = baseWidth / 0.78;\n      this.defenseText.anchor.x = 0.5;\n      this.defenseText.anchor.y = 0.5;\n      this.container.filterArea = new PIXI.Rectangle(baseWidth / 7.88, baseWidth / 7.7, baseWidth / 1.31, baseWidth / 1.26);\n    }\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(txt) {\n      this.title.text = txt;\n      this.title.style = setFontStyle(txt, this.title.style, 200);\n    }\n  }, {\n    key: \"setCategory\",\n    value: function setCategory(txt) {\n      this.category.text = txt;\n      this.category.style = setFontStyle(txt, this.category.style, 200);\n    }\n  }, {\n    key: \"setInfo\",\n    value: function setInfo(txt) {\n      this.info.text = txt;\n    }\n  }, {\n    key: \"setGoldText\",\n    value: function setGoldText(txt) {\n      this.goldText.text = txt;\n    }\n  }, {\n    key: \"setAttackText\",\n    value: function setAttackText(txt) {\n      this.attackText.text = txt;\n\n      if (txt.length && txt !== '0') {\n        this.attack.visible = true;\n      } else {\n        this.attackText.text = '';\n        this.attack.visible = false;\n      }\n    }\n  }, {\n    key: \"setDefenseText\",\n    value: function setDefenseText(txt) {\n      this.defenseText.text = txt;\n\n      if (txt.length && txt !== '0') {\n        this.defense.visible = true;\n      } else {\n        this.defenseText.text = '';\n        this.defense.visible = false;\n      }\n    }\n  }, {\n    key: \"setRarity\",\n    value: function setRarity(rarity) {\n      if (rarity === 0) {\n        this.setRarityStone(PIXI.Texture.fromImage('/data/RarityStoneCommon.png'));\n      } else if (rarity === 1) {\n        this.setRarityStone(PIXI.Texture.fromImage('/data/RarityStoneRare.png'));\n      } else if (rarity === 2) {\n        this.setRarityStone(PIXI.Texture.fromImage('/data/RarityStoneEpic.png'));\n      } else if (rarity === 3) {\n        this.setRarityStone(PIXI.Texture.fromImage('/data/RarityStoneUnique.png'));\n      } else {\n        this.setRarityStone(PIXI.Texture.EMPTY);\n      }\n    }\n  }, {\n    key: \"setFrame\",\n    value: function setFrame(texture) {\n      PIXI.Texture.removeFromCache(this.frame.texture);\n      this.frame.texture = texture;\n    }\n  }, {\n    key: \"setRarityStone\",\n    value: function setRarityStone(texture) {\n      PIXI.Texture.removeFromCache(this.rarityStone.texture);\n      this.rarityStone.texture = texture;\n    }\n  }, {\n    key: \"setGoldSymbol\",\n    value: function setGoldSymbol(texture) {\n      PIXI.Texture.removeFromCache(this.gold.texture);\n      this.gold.texture = texture;\n    }\n  }, {\n    key: \"setAttackSymbol\",\n    value: function setAttackSymbol(texture) {\n      PIXI.Texture.removeFromCache(this.attack.texture);\n      this.attack.texture = texture;\n    }\n  }, {\n    key: \"setDefenseSymbol\",\n    value: function setDefenseSymbol(texture) {\n      PIXI.Texture.removeFromCache(this.defense.texture);\n      this.defense.texture = texture;\n    }\n  }, {\n    key: \"setImage\",\n    value: function setImage(texture) {\n      PIXI.Texture.removeFromCache(this.image.texture);\n      this.image.texture = texture;\n    }\n  }, {\n    key: \"setImageFrame\",\n    value: function setImageFrame() {\n      var image_settings = document.getElementsByName(\"image_settings\")[0];\n\n      try {\n        var obj = JSON.parse(image_settings.value);\n        this.image.width = obj.width * this.app.width / 630;\n        this.image.height = obj.height * this.app.width / 630;\n        this.image.x = obj.x * this.app.width / 630 + this.image.width * this.image.anchor.x;\n        this.image.y = obj.y * this.app.width / 630 + this.image.height * this.image.anchor.y;\n        this.image.rotation = obj.rotation;\n      } catch (e) {}\n    }\n  }, {\n    key: \"setCost\",\n    value: function setCost(c) {\n      var _this = this;\n\n      var costs = this.sortCosts(c);\n      this.costs.forEach(function (spr) {\n        _this.app.stage.removeChild(spr);\n      }, this);\n      this.costs = [];\n      this.costPos = this.app.width / 1.32;\n      this.addCostSprites(costs);\n    }\n  }, {\n    key: \"sortCosts\",\n    value: function sortCosts(c) {\n      var _this2 = this;\n\n      var costs = [];\n      var neu = {};\n      c.forEach(function (e) {\n        var d = {};\n        d.type = e.id;\n        d.cost = e.value;\n\n        if (d.type === \"cost_neutral\") {\n          d.texture = _this2.neu_tex;\n        } else if (d.type === \"cost_bio\") {\n          d.texture = _this2.bio_tex;\n        } else if (d.type === \"cost_par\") {\n          d.texture = _this2.par_tex;\n        } else if (d.type === \"cost_art\") {\n          d.texture = _this2.art_tex;\n        } else if (d.type === \"cost_ene\") {\n          d.texture = _this2.ene_tex;\n        }\n\n        if (d.type === \"cost_neutral\") {\n          neu = d;\n        } else if (d.type !== \"cost_gold\") {\n          costs.push(d);\n        }\n      }, this);\n      costs.sort(function (a, b) {\n        return b.cost - a.cost;\n      });\n      costs.push(neu);\n      return costs;\n    }\n  }, {\n    key: \"addCostSprites\",\n    value: function addCostSprites(costs) {\n      var _this3 = this;\n\n      costs.forEach(function (c) {\n        for (var i = 0; i < c.cost; i++) {\n          var s = new PIXI.Sprite();\n          s.texture = c.texture;\n          s.x = _this3.costPos;\n          s.y = _this3.app.width / 13.87;\n          s.width = _this3.app.width / 20.2;\n          s.height = _this3.app.width / 20.2;\n          _this3.costPos -= _this3.app.width / 20;\n\n          _this3.costs.push(s);\n\n          _this3.app.stage.addChild(s);\n        }\n      }, this);\n    }\n  }]);\n\n  return CardView;\n}();\n\nvar card = new CardView();\ndocument.getElementById('render-view').appendChild(card.app.view);\ncard.app.view.addEventListener('wheel', function (e) {\n  try {\n    if (!e.ctrlKey) {\n      var obj = JSON.parse(image_settings.value);\n      obj.width += obj.width * e.deltaY / 360;\n      obj.height += obj.height * e.deltaY / 360;\n      image_settings.value = JSON.stringify(obj);\n      card.setImageFrame();\n    } else {\n      var _obj = JSON.parse(image_settings.value);\n\n      _obj.rotation += e.deltaY / 360;\n      image_settings.value = JSON.stringify(_obj);\n      card.setImageFrame();\n    }\n\n    e.preventDefault();\n  } catch (e) {}\n});\ncard.app.view.addEventListener('mousedown', function (e) {\n  card.drag = true;\n});\ncard.app.view.addEventListener('mouseup', function (e) {\n  card.drag = false;\n});\ncard.app.view.addEventListener('mousemove', function (e) {\n  if (card.drag) {\n    try {\n      var obj = JSON.parse(image_settings.value);\n      obj.x += e.movementX;\n      obj.y += e.movementY;\n      image_settings.value = JSON.stringify(obj);\n      card.setImageFrame();\n    } catch (e) {}\n  }\n});\nvar name = document.getElementsByName(\"name\")[0];\ncard.setTitle(name.value);\nvar card_type = document.getElementsByName(\"card_type\")[0];\nvar category_text = document.getElementsByName(\"category_text\")[0];\ncard.setCategory(card_type.value + ', ' + category_text.value);\nvar rarity = document.getElementsByName(\"rarity\")[0];\ncard.setRarity(rarity.selectedIndex);\nvar cost_gold = document.getElementsByName(\"cost_gold\")[0];\ncard.setGoldText(cost_gold.value);\nvar image_path = document.getElementsByName(\"image_path\")[0];\ncard.setImage(PIXI.Texture.fromImage(image_path.value));\nvar image_settings = document.getElementsByName(\"image_settings\")[0];\ncard.setImageFrame();\nvar attack = document.getElementsByName(\"attack\")[0];\ncard.setAttackText(attack.value);\nvar shield = document.getElementsByName(\"shield\")[0];\ncard.setDefenseText(shield.value);\nvar costs = document.querySelectorAll(\"[name^=cost_]\");\ncard.setCost(costs);\nvar upload_image = document.getElementById('card_image');\nconsole.log(upload_image);\nupload_image.addEventListener('change', function () {\n  var fReader = new FileReader();\n  fReader.readAsDataURL(upload_image.files[0]);\n\n  fReader.onloadend = function (event) {\n    var texture = PIXI.Texture.fromImage(event.target.result);\n    card.setImage(texture);\n    texture.on('update', function () {\n      image_settings.value = '{\"x\":0,\"y\":0,\"width\":' + card.image.texture.baseTexture.realWidth + ',\"height\":' + card.image.texture.baseTexture.realHeight + ',\"rotation\":0}';\n      card.setImageFrame();\n    });\n    texture.update();\n  };\n});\nname.addEventListener('input', function () {\n  card.setTitle(name.value);\n});\ncard_type.addEventListener('change', function () {\n  card.setCategory(card_type.value + ', ' + category_text.value);\n});\ncategory_text.addEventListener('input', function () {\n  card.setCategory(card_type.value + ', ' + category_text.value);\n});\nrarity.addEventListener('change', function () {\n  card.setRarity(rarity.selectedIndex);\n});\ncost_gold.addEventListener('input', function () {\n  card.setGoldText(cost_gold.value);\n});\nimage_path.addEventListener('input', function () {\n  var texture = PIXI.Texture.fromImage(image_path.value);\n  card.setImage(texture);\n  texture.on('update', function () {\n    image_settings.value = '{\"x\":0,\"y\":0,\"width\":' + card.image.texture.baseTexture.realWidth + ',\"height\":' + card.image.texture.baseTexture.realHeight + ',\"rotation\":0}';\n    card.setImageFrame();\n  });\n  texture.update();\n});\nattack.addEventListener('input', function () {\n  card.setAttackText(attack.value);\n});\nshield.addEventListener('input', function () {\n  card.setDefenseText(shield.value);\n});\ncosts.forEach(function (c) {\n  c.addEventListener('input', function () {\n    card.setCost(costs);\n  }, _this4);\n});\n\nfunction setFontStyle(text, style, maxWidth) {\n  var maxFontSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 40;\n  var minFontSize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 18;\n  var align = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"center\";\n  style.fontSize = maxFontSize;\n  style.wordWrap = false;\n  style.align = align;\n  var width = PIXI.TextMetrics.measureText(text, style).width;\n\n  while (width > maxWidth && style.fontSize > minFontSize) {\n    style.fontSize -= 1;\n    width = PIXI.TextMetrics.measureText(text, style).width;\n  }\n\n  if (width > maxWidth && style.fontSize === minFontSize) {\n    style.wordWrap = true;\n    style.breakWords = true;\n    style.wordWrapWidth = maxWidth;\n  }\n\n  return style;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/render.js\n");

/***/ }),

/***/ 1:
/*!**************************************!*\
  !*** multi ./resources/js/render.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/nino/IdeaProjects/Gaya_CardManager/resources/js/render.js */"./resources/js/render.js");


/***/ })

/******/ });