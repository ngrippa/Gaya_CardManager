/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/lg-fullscreen.js/dist/lg-fullscreen.js":
/*!*************************************************************!*\
  !*** ./node_modules/lg-fullscreen.js/dist/lg-fullscreen.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var require;var require;/**!\r\n * lg-fullscreen.js | 1.0.0 | October 5th 2016\r\n * http://sachinchoolur.github.io/lg-fullscreen.js\r\n * Copyright (c) 2016 Sachin N; \r\n * @license GPLv3 \r\n */(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory();\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory();\n        global.lgFullscreen = mod.exports;\n    }\n})(this, function () {\n    'use strict';\n\n    var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    var fullscreenDefaults = {\n        fullScreen: true\n    };\n\n    var Fullscreen = function Fullscreen(element) {\n\n        this.el = element;\n\n        this.core = window.lgData[this.el.getAttribute('lg-uid')];\n        this.core.s = _extends({}, fullscreenDefaults, this.core.s);\n\n        this.init();\n\n        return this;\n    };\n\n    Fullscreen.prototype.init = function () {\n        var fullScreen = '';\n        if (this.core.s.fullScreen) {\n\n            // check for fullscreen browser support\n            if (!document.fullscreenEnabled && !document.webkitFullscreenEnabled && !document.mozFullScreenEnabled && !document.msFullscreenEnabled) {\n                return;\n            } else {\n                fullScreen = '<span class=\"lg-fullscreen lg-icon\"></span>';\n                this.core.outer.querySelector('.lg-toolbar').insertAdjacentHTML('beforeend', fullScreen);\n                this.fullScreen();\n            }\n        }\n    };\n\n    Fullscreen.prototype.requestFullscreen = function () {\n        var el = document.documentElement;\n        if (el.requestFullscreen) {\n            el.requestFullscreen();\n        } else if (el.msRequestFullscreen) {\n            el.msRequestFullscreen();\n        } else if (el.mozRequestFullScreen) {\n            el.mozRequestFullScreen();\n        } else if (el.webkitRequestFullscreen) {\n            el.webkitRequestFullscreen();\n        }\n    };\n\n    Fullscreen.prototype.exitFullscreen = function () {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    };\n\n    // https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\n    Fullscreen.prototype.fullScreen = function () {\n        var _this = this;\n\n        utils.on(document, 'fullscreenchange.lgfullscreen webkitfullscreenchange.lgfullscreen mozfullscreenchange.lgfullscreen MSFullscreenChange.lgfullscreen', function () {\n            if (utils.hasClass(_this.core.outer, 'lg-fullscreen-on')) {\n                utils.removeClass(_this.core.outer, 'lg-fullscreen-on');\n            } else {\n                utils.addClass(_this.core.outer, 'lg-fullscreen-on');\n            }\n        });\n\n        utils.on(this.core.outer.querySelector('.lg-fullscreen'), 'click.lg', function () {\n            if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {\n                _this.requestFullscreen();\n            } else {\n                _this.exitFullscreen();\n            }\n        });\n    };\n\n    Fullscreen.prototype.destroy = function () {\n\n        // exit from fullscreen if activated\n        this.exitFullscreen();\n\n        utils.off(document, '.lgfullscreen');\n    };\n\n    window.lgModules.fullscreen = Fullscreen;\n});\n\n},{}]},{},[1])(1)\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lg-fullscreen.js/dist/lg-fullscreen.js\n");

/***/ }),

/***/ "./node_modules/lg-pager.js/dist/lg-pager.js":
/*!***************************************************!*\
  !*** ./node_modules/lg-pager.js/dist/lg-pager.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var require;var require;/**!\r\n * lg-pager.js | 1.0.0 | October 5th 2016\r\n * http://sachinchoolur.github.io/lg-pager.js\r\n * Copyright (c) 2016 Sachin N; \r\n * @license GPLv3 \r\n */(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory();\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory();\n        global.lgPager = mod.exports;\n    }\n})(this, function () {\n    'use strict';\n\n    var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    var pagerDefaults = {\n        pager: false\n    };\n\n    var Pager = function Pager(element) {\n\n        this.el = element;\n\n        this.core = window.lgData[this.el.getAttribute('lg-uid')];\n        this.core.s = _extends({}, pagerDefaults, this.core.s);\n\n        if (this.core.s.pager && this.core.items.length > 1) {\n            this.init();\n        }\n\n        return this;\n    };\n\n    Pager.prototype.init = function () {\n        var _this = this;\n        var pagerList = '';\n        var $pagerCont;\n        var $pagerOuter;\n        var timeout;\n\n        _this.core.outer.querySelector('.lg').insertAdjacentHTML('beforeend', '<div class=\"lg-pager-outer\"></div>');\n\n        if (_this.core.s.dynamic) {\n            for (var j = 0; j < _this.core.s.dynamicEl.length; j++) {\n                pagerList += '<span class=\"lg-pager-cont\"> <span class=\"lg-pager\"></span><div class=\"lg-pager-thumb-cont\"><span class=\"lg-caret\"></span> <img src=\"' + _this.core.s.dynamicEl[j].thumb + '\" /></div></span>';\n            }\n        } else {\n            for (var i = 0; i < _this.core.items.length; i++) {\n                if (!_this.core.s.exThumbImage) {\n                    pagerList += '<span class=\"lg-pager-cont\"> <span class=\"lg-pager\"></span><div class=\"lg-pager-thumb-cont\"><span class=\"lg-caret\"></span> <img src=\"' + _this.core.items[i].querySelector('img').getAttribute('src') + '\" /></div></span>';\n                } else {\n                    pagerList += '<span class=\"lg-pager-cont\"> <span class=\"lg-pager\"></span><div class=\"lg-pager-thumb-cont\"><span class=\"lg-caret\"></span> <img src=\"' + _this.core.items[i].getAttribute(_this.core.s.exThumbImage) + '\" /></div></span>';\n                }\n            }\n        }\n\n        $pagerOuter = _this.core.outer.querySelector('.lg-pager-outer');\n\n        $pagerOuter.innerHTML = pagerList;\n\n        $pagerCont = _this.core.outer.querySelectorAll('.lg-pager-cont');\n        for (var k = 0; k < $pagerCont.length; k++) {\n\n            /*jshint loopfunc: true */\n            (function (index) {\n                utils.on($pagerCont[index], 'click.lg touchend.lg', function () {\n                    _this.core.index = index;\n                    _this.core.slide(_this.core.index, false, false);\n                });\n            })(k);\n        }\n\n        utils.on($pagerOuter, 'mouseover.lg', function () {\n            clearTimeout(timeout);\n            utils.addClass($pagerOuter, 'lg-pager-hover');\n        });\n\n        utils.on($pagerOuter, 'mouseout.lg', function () {\n            timeout = setTimeout(function () {\n                utils.removeClass($pagerOuter, 'lg-pager-hover');\n            });\n        });\n\n        utils.on(_this.core.el, 'onBeforeSlide.lgtm', function (e) {\n            for (var n = 0; n < $pagerCont.length; n++) {\n                utils.removeClass($pagerCont[n], 'lg-pager-active');\n                if (e.detail.index === n) {\n                    utils.addClass($pagerCont[n], 'lg-pager-active');\n                }\n            }\n        });\n    };\n\n    Pager.prototype.destroy = function () {};\n\n    window.lgModules.pager = Pager;\n});\n\n},{}]},{},[1])(1)\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lg-pager.js/dist/lg-pager.js\n");

/***/ }),

/***/ "./node_modules/lg-thumbnail.js/dist/lg-thumbnail.js":
/*!***********************************************************!*\
  !*** ./node_modules/lg-thumbnail.js/dist/lg-thumbnail.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var require;var require;/**!\n * lg-thumbnail.js | 1.0.0 | August 8th 2018\n * http://sachinchoolur.github.io/lg-thumbnail.js\n * Copyright (c) 2016 Sachin N; \n * @license GPLv3 \n */(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory();\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory();\n        global.lgThumbnail = mod.exports;\n    }\n})(this, function () {\n    'use strict';\n\n    var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    var thumbnailDefaults = {\n        thumbnail: true,\n\n        animateThumb: true,\n        currentPagerPosition: 'middle',\n\n        thumbWidth: 100,\n        thumbContHeight: 100,\n        thumbMargin: 5,\n\n        exThumbImage: false,\n        showThumbByDefault: true,\n        toggleThumb: true,\n        pullCaptionUp: true,\n\n        enableThumbDrag: true,\n        enableThumbSwipe: true,\n        swipeThreshold: 50,\n\n        loadYoutubeThumbnail: true,\n        youtubeThumbSize: 1,\n\n        loadVimeoThumbnail: true,\n        vimeoThumbSize: 'thumbnail_small',\n\n        loadDailymotionThumbnail: true\n    };\n\n    var Thumbnail = function Thumbnail(element) {\n\n        this.el = element;\n\n        this.core = window.lgData[this.el.getAttribute('lg-uid')];\n        this.core.s = _extends({}, thumbnailDefaults, this.core.s);\n\n        this.thumbOuter = null;\n        this.thumbOuterWidth = 0;\n        this.thumbTotalWidth = this.core.items.length * (this.core.s.thumbWidth + this.core.s.thumbMargin);\n        this.thumbIndex = this.core.index;\n\n        // Thumbnail animation value\n        this.left = 0;\n\n        this.init();\n\n        return this;\n    };\n\n    Thumbnail.prototype.init = function () {\n        var _this = this;\n        if (this.core.s.thumbnail && this.core.items.length > 1) {\n            if (this.core.s.showThumbByDefault) {\n                setTimeout(function () {\n                    utils.addClass(_this.core.outer, 'lg-thumb-open');\n                }, 700);\n            }\n\n            if (this.core.s.pullCaptionUp) {\n                utils.addClass(this.core.outer, 'lg-pull-caption-up');\n            }\n\n            this.build();\n            if (this.core.s.animateThumb) {\n                if (this.core.s.enableThumbDrag && !this.core.isTouch && this.core.doCss()) {\n                    this.enableThumbDrag();\n                }\n\n                if (this.core.s.enableThumbSwipe && this.core.isTouch && this.core.doCss()) {\n                    this.enableThumbSwipe();\n                }\n\n                this.thumbClickable = false;\n            } else {\n                this.thumbClickable = true;\n            }\n\n            this.toggle();\n            this.thumbkeyPress();\n        }\n    };\n\n    Thumbnail.prototype.build = function () {\n        var _this = this;\n        var thumbList = '';\n        var vimeoErrorThumbSize = '';\n        var $thumb;\n        var html = '<div class=\"lg-thumb-outer\">' + '<div class=\"lg-thumb group\">' + '</div>' + '</div>';\n\n        switch (this.core.s.vimeoThumbSize) {\n            case 'thumbnail_large':\n                vimeoErrorThumbSize = '640';\n                break;\n            case 'thumbnail_medium':\n                vimeoErrorThumbSize = '200x150';\n                break;\n            case 'thumbnail_small':\n                vimeoErrorThumbSize = '100x75';\n        }\n\n        utils.addClass(_this.core.outer, 'lg-has-thumb');\n\n        _this.core.outer.querySelector('.lg').insertAdjacentHTML('beforeend', html);\n\n        _this.thumbOuter = _this.core.outer.querySelector('.lg-thumb-outer');\n        _this.thumbOuterWidth = _this.thumbOuter.offsetWidth;\n\n        if (_this.core.s.animateThumb) {\n            _this.core.outer.querySelector('.lg-thumb').style.width = _this.thumbTotalWidth + 'px';\n            _this.core.outer.querySelector('.lg-thumb').style.position = 'relative';\n        }\n\n        if (this.core.s.animateThumb) {\n            _this.thumbOuter.style.height = _this.core.s.thumbContHeight + 'px';\n        }\n\n        function getThumb(src, thumb, index) {\n            var isVideo = _this.core.isVideo(src, index) || {};\n            var thumbImg;\n            var vimeoId = '';\n\n            if (isVideo.youtube || isVideo.vimeo || isVideo.dailymotion) {\n                if (isVideo.youtube) {\n                    if (_this.core.s.loadYoutubeThumbnail) {\n                        thumbImg = '//img.youtube.com/vi/' + isVideo.youtube[1] + '/' + _this.core.s.youtubeThumbSize + '.jpg';\n                    } else {\n                        thumbImg = thumb;\n                    }\n                } else if (isVideo.vimeo) {\n                    if (_this.core.s.loadVimeoThumbnail) {\n                        thumbImg = '//i.vimeocdn.com/video/error_' + vimeoErrorThumbSize + '.jpg';\n                        vimeoId = isVideo.vimeo[1];\n                    } else {\n                        thumbImg = thumb;\n                    }\n                } else if (isVideo.dailymotion) {\n                    if (_this.core.s.loadDailymotionThumbnail) {\n                        thumbImg = '//www.dailymotion.com/thumbnail/video/' + isVideo.dailymotion[1];\n                    } else {\n                        thumbImg = thumb;\n                    }\n                }\n            } else {\n                thumbImg = thumb;\n            }\n\n            thumbList += '<div data-vimeo-id=\"' + vimeoId + '\" class=\"lg-thumb-item\" style=\"width:' + _this.core.s.thumbWidth + 'px; margin-right: ' + _this.core.s.thumbMargin + 'px\"><img src=\"' + thumbImg + '\" /></div>';\n            vimeoId = '';\n        }\n\n        if (_this.core.s.dynamic) {\n            for (var j = 0; j < _this.core.s.dynamicEl.length; j++) {\n                getThumb(_this.core.s.dynamicEl[j].src, _this.core.s.dynamicEl[j].thumb, j);\n            }\n        } else {\n            for (var i = 0; i < _this.core.items.length; i++) {\n                if (!_this.core.s.exThumbImage) {\n                    getThumb(_this.core.items[i].getAttribute('href') || _this.core.items[i].getAttribute('data-src'), _this.core.items[i].querySelector('img').getAttribute('src'), i);\n                } else {\n                    getThumb(_this.core.items[i].getAttribute('href') || _this.core.items[i].getAttribute('data-src'), _this.core.items[i].getAttribute(_this.core.s.exThumbImage), i);\n                }\n            }\n        }\n\n        _this.core.outer.querySelector('.lg-thumb').innerHTML = thumbList;\n\n        $thumb = _this.core.outer.querySelectorAll('.lg-thumb-item');\n\n        for (var n = 0; n < $thumb.length; n++) {\n\n            /*jshint loopfunc: true */\n            (function (index) {\n                var $this = $thumb[index];\n                var vimeoVideoId = $this.getAttribute('data-vimeo-id');\n                if (vimeoVideoId) {\n\n                    window['lgJsonP' + _this.el.getAttribute('lg-uid') + '' + n] = function (content) {\n                        $this.querySelector('img').setAttribute('src', content[0][_this.core.s.vimeoThumbSize]);\n                    };\n\n                    var script = document.createElement('script');\n                    script.className = 'lg-script';\n                    script.src = '//www.vimeo.com/api/v2/video/' + vimeoVideoId + '.json?callback=lgJsonP' + _this.el.getAttribute('lg-uid') + '' + n;\n                    document.body.appendChild(script);\n                }\n            })(n);\n        }\n\n        // manage active class for thumbnail\n        utils.addClass($thumb[_this.core.index], 'active');\n        utils.on(_this.core.el, 'onBeforeSlide.lgtm', function () {\n\n            for (var j = 0; j < $thumb.length; j++) {\n                utils.removeClass($thumb[j], 'active');\n            }\n\n            utils.addClass($thumb[_this.core.index], 'active');\n        });\n\n        for (var k = 0; k < $thumb.length; k++) {\n\n            /*jshint loopfunc: true */\n            (function (index) {\n\n                utils.on($thumb[index], 'click.lg touchend.lg', function () {\n\n                    setTimeout(function () {\n\n                        // In IE9 and bellow touch does not support\n                        // Go to slide if browser does not support css transitions\n                        if (_this.thumbClickable && !_this.core.lgBusy || !_this.core.doCss()) {\n                            _this.core.index = index;\n                            _this.core.slide(_this.core.index, false, true);\n                        }\n                    }, 50);\n                });\n            })(k);\n        }\n\n        utils.on(_this.core.el, 'onBeforeSlide.lgtm', function () {\n            _this.animateThumb(_this.core.index);\n        });\n\n        utils.on(window, 'resize.lgthumb orientationchange.lgthumb', function () {\n            setTimeout(function () {\n                _this.animateThumb(_this.core.index);\n                _this.thumbOuterWidth = _this.thumbOuter.offsetWidth;\n            }, 200);\n        });\n    };\n\n    Thumbnail.prototype.setTranslate = function (value) {\n        utils.setVendor(this.core.outer.querySelector('.lg-thumb'), 'Transform', 'translate3d(-' + value + 'px, 0px, 0px)');\n    };\n\n    Thumbnail.prototype.animateThumb = function (index) {\n        var $thumb = this.core.outer.querySelector('.lg-thumb');\n        if (this.core.s.animateThumb) {\n            var position;\n            switch (this.core.s.currentPagerPosition) {\n                case 'left':\n                    position = 0;\n                    break;\n                case 'middle':\n                    position = this.thumbOuterWidth / 2 - this.core.s.thumbWidth / 2;\n                    break;\n                case 'right':\n                    position = this.thumbOuterWidth - this.core.s.thumbWidth;\n            }\n            this.left = (this.core.s.thumbWidth + this.core.s.thumbMargin) * index - 1 - position;\n            if (this.left > this.thumbTotalWidth - this.thumbOuterWidth) {\n                this.left = this.thumbTotalWidth - this.thumbOuterWidth;\n            }\n\n            if (this.left < 0) {\n                this.left = 0;\n            }\n\n            if (this.core.lGalleryOn) {\n                if (!utils.hasClass($thumb, 'on')) {\n                    utils.setVendor(this.core.outer.querySelector('.lg-thumb'), 'TransitionDuration', this.core.s.speed + 'ms');\n                }\n\n                if (!this.core.doCss()) {\n                    $thumb.style.left = -this.left + 'px';\n                }\n            } else {\n                if (!this.core.doCss()) {\n                    $thumb.style.left = -this.left + 'px';\n                }\n            }\n\n            this.setTranslate(this.left);\n        }\n    };\n\n    // Enable thumbnail dragging and swiping\n    Thumbnail.prototype.enableThumbDrag = function () {\n\n        var _this = this;\n        var startCoords = 0;\n        var endCoords = 0;\n        var isDraging = false;\n        var isMoved = false;\n        var tempLeft = 0;\n\n        utils.addClass(_this.thumbOuter, 'lg-grab');\n\n        utils.on(_this.core.outer.querySelector('.lg-thumb'), 'mousedown.lgthumb', function (e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                // execute only on .lg-object\n                e.preventDefault();\n                startCoords = e.pageX;\n                isDraging = true;\n\n                // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                _this.core.outer.scrollLeft += 1;\n                _this.core.outer.scrollLeft -= 1;\n\n                // *\n                _this.thumbClickable = false;\n                utils.removeClass(_this.thumbOuter, 'lg-grab');\n                utils.addClass(_this.thumbOuter, 'lg-grabbing');\n            }\n        });\n\n        utils.on(window, 'mousemove.lgthumb', function (e) {\n            if (isDraging) {\n                tempLeft = _this.left;\n                isMoved = true;\n                endCoords = e.pageX;\n\n                utils.addClass(_this.thumbOuter, 'lg-dragging');\n\n                tempLeft = tempLeft - (endCoords - startCoords);\n\n                if (tempLeft > _this.thumbTotalWidth - _this.thumbOuterWidth) {\n                    tempLeft = _this.thumbTotalWidth - _this.thumbOuterWidth;\n                }\n\n                if (tempLeft < 0) {\n                    tempLeft = 0;\n                }\n\n                // move current slide\n                _this.setTranslate(tempLeft);\n            }\n        });\n\n        utils.on(window, 'mouseup.lgthumb', function () {\n            if (isMoved) {\n                isMoved = false;\n                utils.removeClass(_this.thumbOuter, 'lg-dragging');\n\n                _this.left = tempLeft;\n\n                if (Math.abs(endCoords - startCoords) < _this.core.s.swipeThreshold) {\n                    _this.thumbClickable = true;\n                }\n            } else {\n                _this.thumbClickable = true;\n            }\n\n            if (isDraging) {\n                isDraging = false;\n                utils.removeClass(_this.thumbOuter, 'lg-grabbing');\n                utils.addClass(_this.thumbOuter, 'lg-grab');\n            }\n        });\n    };\n\n    Thumbnail.prototype.enableThumbSwipe = function () {\n        var _this = this;\n        var startCoords = 0;\n        var endCoords = 0;\n        var isMoved = false;\n        var tempLeft = 0;\n\n        utils.on(_this.core.outer.querySelector('.lg-thumb'), 'touchstart.lg', function (e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                e.preventDefault();\n                startCoords = e.targetTouches[0].pageX;\n                _this.thumbClickable = false;\n            }\n        });\n\n        utils.on(_this.core.outer.querySelector('.lg-thumb'), 'touchmove.lg', function (e) {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n                e.preventDefault();\n                endCoords = e.targetTouches[0].pageX;\n                isMoved = true;\n\n                utils.addClass(_this.thumbOuter, 'lg-dragging');\n\n                tempLeft = _this.left;\n\n                tempLeft = tempLeft - (endCoords - startCoords);\n\n                if (tempLeft > _this.thumbTotalWidth - _this.thumbOuterWidth) {\n                    tempLeft = _this.thumbTotalWidth - _this.thumbOuterWidth;\n                }\n\n                if (tempLeft < 0) {\n                    tempLeft = 0;\n                }\n\n                // move current slide\n                _this.setTranslate(tempLeft);\n            }\n        });\n\n        utils.on(_this.core.outer.querySelector('.lg-thumb'), 'touchend.lg', function () {\n            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\n\n                if (isMoved) {\n                    isMoved = false;\n                    utils.removeClass(_this.thumbOuter, 'lg-dragging');\n                    if (Math.abs(endCoords - startCoords) < _this.core.s.swipeThreshold) {\n                        _this.thumbClickable = true;\n                    }\n\n                    _this.left = tempLeft;\n                } else {\n                    _this.thumbClickable = true;\n                }\n            } else {\n                _this.thumbClickable = true;\n            }\n        });\n    };\n\n    Thumbnail.prototype.toggle = function () {\n        var _this = this;\n        if (_this.core.s.toggleThumb) {\n            utils.addClass(_this.core.outer, 'lg-can-toggle');\n            _this.thumbOuter.insertAdjacentHTML('beforeend', '<span class=\"lg-toggle-thumb lg-icon\"></span>');\n            utils.on(_this.core.outer.querySelector('.lg-toggle-thumb'), 'click.lg', function () {\n                if (utils.hasClass(_this.core.outer, 'lg-thumb-open')) {\n                    utils.removeClass(_this.core.outer, 'lg-thumb-open');\n                } else {\n                    utils.addClass(_this.core.outer, 'lg-thumb-open');\n                }\n            });\n        }\n    };\n\n    Thumbnail.prototype.thumbkeyPress = function () {\n        var _this = this;\n        utils.on(window, 'keydown.lgthumb', function (e) {\n            if (e.keyCode === 38) {\n                e.preventDefault();\n                utils.addClass(_this.core.outer, 'lg-thumb-open');\n            } else if (e.keyCode === 40) {\n                e.preventDefault();\n                utils.removeClass(_this.core.outer, 'lg-thumb-open');\n            }\n        });\n    };\n\n    Thumbnail.prototype.destroy = function (d) {\n        if (this.core.s.thumbnail && this.core.items.length > 1) {\n            utils.off(window, '.lgthumb');\n            if (!d) {\n                this.thumbOuter.parentNode.removeChild(this.thumbOuter);\n            }\n            utils.removeClass(this.core.outer, 'lg-has-thumb');\n\n            var lgScript = document.getElementsByClassName('lg-script');\n            while (lgScript[0]) {\n                lgScript[0].parentNode.removeChild(lgScript[0]);\n            }\n        }\n    };\n\n    window.lgModules.thumbnail = Thumbnail;\n});\n\n},{}]},{},[1])(1)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lg-thumbnail.js/dist/lg-thumbnail.js\n");

/***/ }),

/***/ "./node_modules/lg-zoom.js/dist/lg-zoom.js":
/*!*************************************************!*\
  !*** ./node_modules/lg-zoom.js/dist/lg-zoom.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var require;var require;/**!\r\n * lg-zoom.js | 1.0.1 | December 22nd 2016\r\n * http://sachinchoolur.github.io/lg-zoom.js\r\n * Copyright (c) 2016 Sachin N; \r\n * @license GPLv3 \r\n */(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory();\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory();\n        global.lgZoom = mod.exports;\n    }\n})(this, function () {\n    'use strict';\n\n    var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    var getUseLeft = function getUseLeft() {\n        var useLeft = false;\n        var isChrome = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n        if (isChrome && parseInt(isChrome[2], 10) < 54) {\n            useLeft = true;\n        }\n\n        return useLeft;\n    };\n\n    var zoomDefaults = {\n        scale: 1,\n        zoom: true,\n        actualSize: true,\n        enableZoomAfter: 300,\n        useLeftForZoom: getUseLeft()\n    };\n\n    var Zoom = function Zoom(element) {\n\n        this.el = element;\n\n        this.core = window.lgData[this.el.getAttribute('lg-uid')];\n        this.core.s = _extends({}, zoomDefaults, this.core.s);\n\n        if (this.core.s.zoom && this.core.doCss()) {\n            this.init();\n\n            // Store the zoomable timeout value just to clear it while closing\n            this.zoomabletimeout = false;\n\n            // Set the initial value center\n            this.pageX = window.innerWidth / 2;\n            this.pageY = window.innerHeight / 2 + (document.documentElement.scrollTop || document.body.scrollTop);\n        }\n\n        return this;\n    };\n\n    Zoom.prototype.init = function () {\n\n        var _this = this;\n        var zoomIcons = '<span id=\"lg-zoom-in\" class=\"lg-icon\"></span><span id=\"lg-zoom-out\" class=\"lg-icon\"></span>';\n\n        if (_this.core.s.actualSize) {\n            zoomIcons += '<span id=\"lg-actual-size\" class=\"lg-icon\"></span>';\n        }\n\n        if (_this.core.s.useLeftForZoom) {\n            utils.addClass(_this.core.outer, 'lg-use-left-for-zoom');\n        } else {\n            utils.addClass(_this.core.outer, 'lg-use-transition-for-zoom');\n        }\n\n        this.core.outer.querySelector('.lg-toolbar').insertAdjacentHTML('beforeend', zoomIcons);\n\n        // Add zoomable class\n        utils.on(_this.core.el, 'onSlideItemLoad.lgtmzoom', function (event) {\n\n            // delay will be 0 except first time\n            var _speed = _this.core.s.enableZoomAfter + event.detail.delay;\n\n            // set _speed value 0 if gallery opened from direct url and if it is first slide\n            if (utils.hasClass(document.body, 'lg-from-hash') && event.detail.delay) {\n\n                // will execute only once\n                _speed = 0;\n            } else {\n\n                // Remove lg-from-hash to enable starting animation.\n                utils.removeClass(document.body, 'lg-from-hash');\n            }\n\n            _this.zoomabletimeout = setTimeout(function () {\n                utils.addClass(_this.core.___slide[event.detail.index], 'lg-zoomable');\n            }, _speed + 30);\n        });\n\n        var scale = 1;\n        /**\r\n         * @desc Image zoom\r\n         * Translate the wrap and scale the image to get better user experience\r\n         *\r\n         * @param {String} scaleVal - Zoom decrement/increment value\r\n         */\n        var zoom = function zoom(scaleVal) {\n\n            var image = _this.core.outer.querySelector('.lg-current .lg-image');\n            var _x;\n            var _y;\n\n            // Find offset manually to avoid issue after zoom\n            var offsetX = (window.innerWidth - image.clientWidth) / 2;\n            var offsetY = (window.innerHeight - image.clientHeight) / 2 + (document.documentElement.scrollTop || document.body.scrollTop);\n\n            _x = _this.pageX - offsetX;\n            _y = _this.pageY - offsetY;\n\n            var x = (scaleVal - 1) * _x;\n            var y = (scaleVal - 1) * _y;\n\n            utils.setVendor(image, 'Transform', 'scale3d(' + scaleVal + ', ' + scaleVal + ', 1)');\n            image.setAttribute('data-scale', scaleVal);\n\n            if (_this.core.s.useLeftForZoom) {\n                image.parentElement.style.left = -x + 'px';\n                image.parentElement.style.top = -y + 'px';\n            } else {\n                utils.setVendor(image.parentElement, 'Transform', 'translate3d(-' + x + 'px, -' + y + 'px, 0)');\n            }\n\n            image.parentElement.setAttribute('data-x', x);\n            image.parentElement.setAttribute('data-y', y);\n        };\n\n        var callScale = function callScale() {\n            if (scale > 1) {\n                utils.addClass(_this.core.outer, 'lg-zoomed');\n            } else {\n                _this.resetZoom();\n            }\n\n            if (scale < 1) {\n                scale = 1;\n            }\n\n            zoom(scale);\n        };\n\n        var actualSize = function actualSize(event, image, index, fromIcon) {\n            var w = image.clientWidth;\n            var nw;\n            if (_this.core.s.dynamic) {\n                nw = _this.core.s.dynamicEl[index].width || image.naturalWidth || w;\n            } else {\n                nw = _this.core.items[index].getAttribute('data-width') || image.naturalWidth || w;\n            }\n\n            var _scale;\n\n            if (utils.hasClass(_this.core.outer, 'lg-zoomed')) {\n                scale = 1;\n            } else {\n                if (nw > w) {\n                    _scale = nw / w;\n                    scale = _scale || 2;\n                }\n            }\n\n            if (fromIcon) {\n                _this.pageX = window.innerWidth / 2;\n                _this.pageY = window.innerHeight / 2 + (document.documentElement.scrollTop || document.body.scrollTop);\n            } else {\n                _this.pageX = event.pageX || event.targetTouches[0].pageX;\n                _this.pageY = event.pageY || event.targetTouches[0].pageY;\n            }\n\n            callScale();\n            setTimeout(function () {\n                utils.removeClass(_this.core.outer, 'lg-grabbing');\n                utils.addClass(_this.core.outer, 'lg-grab');\n            }, 10);\n        };\n\n        var tapped = false;\n\n        // event triggered after appending slide content\n        utils.on(_this.core.el, 'onAferAppendSlide.lgtmzoom', function (event) {\n\n            var index = event.detail.index;\n\n            // Get the current element\n            var image = _this.core.___slide[index].querySelector('.lg-image');\n\n            if (!_this.core.isTouch) {\n                utils.on(image, 'dblclick', function (event) {\n                    actualSize(event, image, index);\n                });\n            }\n\n            if (_this.core.isTouch) {\n                utils.on(image, 'touchstart', function (event) {\n                    if (!tapped) {\n                        tapped = setTimeout(function () {\n                            tapped = null;\n                        }, 300);\n                    } else {\n                        clearTimeout(tapped);\n                        tapped = null;\n                        actualSize(event, image, index);\n                    }\n\n                    event.preventDefault();\n                });\n            }\n        });\n\n        // Update zoom on resize and orientationchange\n        utils.on(window, 'resize.lgzoom scroll.lgzoom orientationchange.lgzoom', function () {\n            _this.pageX = window.innerWidth / 2;\n            _this.pageY = window.innerHeight / 2 + (document.documentElement.scrollTop || document.body.scrollTop);\n            zoom(scale);\n        });\n\n        utils.on(document.getElementById('lg-zoom-out'), 'click.lg', function () {\n            if (_this.core.outer.querySelector('.lg-current .lg-image')) {\n                scale -= _this.core.s.scale;\n                callScale();\n            }\n        });\n\n        utils.on(document.getElementById('lg-zoom-in'), 'click.lg', function () {\n            if (_this.core.outer.querySelector('.lg-current .lg-image')) {\n                scale += _this.core.s.scale;\n                callScale();\n            }\n        });\n\n        utils.on(document.getElementById('lg-actual-size'), 'click.lg', function (event) {\n            actualSize(event, _this.core.___slide[_this.core.index].querySelector('.lg-image'), _this.core.index, true);\n        });\n\n        // Reset zoom on slide change\n        utils.on(_this.core.el, 'onBeforeSlide.lgtm', function () {\n            scale = 1;\n            _this.resetZoom();\n        });\n\n        // Drag option after zoom\n        if (!_this.core.isTouch) {\n            _this.zoomDrag();\n        }\n\n        if (_this.core.isTouch) {\n            _this.zoomSwipe();\n        }\n    };\n\n    // Reset zoom effect\n    Zoom.prototype.resetZoom = function () {\n        utils.removeClass(this.core.outer, 'lg-zoomed');\n        for (var i = 0; i < this.core.___slide.length; i++) {\n            if (this.core.___slide[i].querySelector('.lg-img-wrap')) {\n                this.core.___slide[i].querySelector('.lg-img-wrap').removeAttribute('style');\n                this.core.___slide[i].querySelector('.lg-img-wrap').removeAttribute('data-x');\n                this.core.___slide[i].querySelector('.lg-img-wrap').removeAttribute('data-y');\n            }\n        }\n\n        for (var j = 0; j < this.core.___slide.length; j++) {\n            if (this.core.___slide[j].querySelector('.lg-image')) {\n                this.core.___slide[j].querySelector('.lg-image').removeAttribute('style');\n                this.core.___slide[j].querySelector('.lg-image').removeAttribute('data-scale');\n            }\n        }\n\n        // Reset pagx pagy values to center\n        this.pageX = window.innerWidth / 2;\n        this.pageY = window.innerHeight / 2 + (document.documentElement.scrollTop || document.body.scrollTop);\n    };\n\n    Zoom.prototype.zoomSwipe = function () {\n        var _this = this;\n        var startCoords = {};\n        var endCoords = {};\n        var isMoved = false;\n\n        // Allow x direction drag\n        var allowX = false;\n\n        // Allow Y direction drag\n        var allowY = false;\n\n        for (var i = 0; i < _this.core.___slide.length; i++) {\n\n            /*jshint loopfunc: true */\n            utils.on(_this.core.___slide[i], 'touchstart.lg', function (e) {\n\n                if (utils.hasClass(_this.core.outer, 'lg-zoomed')) {\n                    var image = _this.core.___slide[_this.core.index].querySelector('.lg-object');\n\n                    allowY = image.offsetHeight * image.getAttribute('data-scale') > _this.core.outer.querySelector('.lg').clientHeight;\n                    allowX = image.offsetWidth * image.getAttribute('data-scale') > _this.core.outer.querySelector('.lg').clientWidth;\n                    if (allowX || allowY) {\n                        e.preventDefault();\n                        startCoords = {\n                            x: e.targetTouches[0].pageX,\n                            y: e.targetTouches[0].pageY\n                        };\n                    }\n                }\n            });\n        }\n\n        for (var j = 0; j < _this.core.___slide.length; j++) {\n\n            /*jshint loopfunc: true */\n            utils.on(_this.core.___slide[j], 'touchmove.lg', function (e) {\n\n                if (utils.hasClass(_this.core.outer, 'lg-zoomed')) {\n\n                    var _el = _this.core.___slide[_this.core.index].querySelector('.lg-img-wrap');\n                    var distanceX;\n                    var distanceY;\n\n                    e.preventDefault();\n                    isMoved = true;\n\n                    endCoords = {\n                        x: e.targetTouches[0].pageX,\n                        y: e.targetTouches[0].pageY\n                    };\n\n                    // reset opacity and transition duration\n                    utils.addClass(_this.core.outer, 'lg-zoom-dragging');\n\n                    if (allowY) {\n                        distanceY = -Math.abs(_el.getAttribute('data-y')) + (endCoords.y - startCoords.y);\n                    } else {\n                        distanceY = -Math.abs(_el.getAttribute('data-y'));\n                    }\n\n                    if (allowX) {\n                        distanceX = -Math.abs(_el.getAttribute('data-x')) + (endCoords.x - startCoords.x);\n                    } else {\n                        distanceX = -Math.abs(_el.getAttribute('data-x'));\n                    }\n\n                    if (Math.abs(endCoords.x - startCoords.x) > 15 || Math.abs(endCoords.y - startCoords.y) > 15) {\n\n                        if (_this.core.s.useLeftForZoom) {\n                            _el.style.left = distanceX + 'px';\n                            _el.style.top = distanceY + 'px';\n                        } else {\n                            utils.setVendor(_el, 'Transform', 'translate3d(' + distanceX + 'px, ' + distanceY + 'px, 0)');\n                        }\n                    }\n                }\n            });\n        }\n\n        for (var k = 0; k < _this.core.___slide.length; k++) {\n\n            /*jshint loopfunc: true */\n            utils.on(_this.core.___slide[k], 'touchend.lg', function () {\n                if (utils.hasClass(_this.core.outer, 'lg-zoomed')) {\n                    if (isMoved) {\n                        isMoved = false;\n                        utils.removeClass(_this.core.outer, 'lg-zoom-dragging');\n                        _this.touchendZoom(startCoords, endCoords, allowX, allowY);\n                    }\n                }\n            });\n        }\n    };\n\n    Zoom.prototype.zoomDrag = function () {\n\n        var _this = this;\n        var startCoords = {};\n        var endCoords = {};\n        var isDraging = false;\n        var isMoved = false;\n\n        // Allow x direction drag\n        var allowX = false;\n\n        // Allow Y direction drag\n        var allowY = false;\n\n        for (var i = 0; i < _this.core.___slide.length; i++) {\n\n            /*jshint loopfunc: true */\n            utils.on(_this.core.___slide[i], 'mousedown.lgzoom', function (e) {\n\n                // execute only on .lg-object\n                var image = _this.core.___slide[_this.core.index].querySelector('.lg-object');\n\n                allowY = image.offsetHeight * image.getAttribute('data-scale') > _this.core.outer.querySelector('.lg').clientHeight;\n                allowX = image.offsetWidth * image.getAttribute('data-scale') > _this.core.outer.querySelector('.lg').clientWidth;\n\n                if (utils.hasClass(_this.core.outer, 'lg-zoomed')) {\n                    if (utils.hasClass(e.target, 'lg-object') && (allowX || allowY)) {\n                        e.preventDefault();\n                        startCoords = {\n                            x: e.pageX,\n                            y: e.pageY\n                        };\n\n                        isDraging = true;\n\n                        // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                        _this.core.outer.scrollLeft += 1;\n                        _this.core.outer.scrollLeft -= 1;\n\n                        utils.removeClass(_this.core.outer, 'lg-grab');\n                        utils.addClass(_this.core.outer, 'lg-grabbing');\n                    }\n                }\n            });\n        }\n\n        utils.on(window, 'mousemove.lgzoom', function (e) {\n            if (isDraging) {\n                var _el = _this.core.___slide[_this.core.index].querySelector('.lg-img-wrap');\n                var distanceX;\n                var distanceY;\n\n                isMoved = true;\n                endCoords = {\n                    x: e.pageX,\n                    y: e.pageY\n                };\n\n                // reset opacity and transition duration\n                utils.addClass(_this.core.outer, 'lg-zoom-dragging');\n\n                if (allowY) {\n                    distanceY = -Math.abs(_el.getAttribute('data-y')) + (endCoords.y - startCoords.y);\n                } else {\n                    distanceY = -Math.abs(_el.getAttribute('data-y'));\n                }\n\n                if (allowX) {\n                    distanceX = -Math.abs(_el.getAttribute('data-x')) + (endCoords.x - startCoords.x);\n                } else {\n                    distanceX = -Math.abs(_el.getAttribute('data-x'));\n                }\n\n                if (_this.core.s.useLeftForZoom) {\n                    _el.style.left = distanceX + 'px';\n                    _el.style.top = distanceY + 'px';\n                } else {\n                    utils.setVendor(_el, 'Transform', 'translate3d(' + distanceX + 'px, ' + distanceY + 'px, 0)');\n                }\n            }\n        });\n\n        utils.on(window, 'mouseup.lgzoom', function (e) {\n\n            if (isDraging) {\n                isDraging = false;\n                utils.removeClass(_this.core.outer, 'lg-zoom-dragging');\n\n                // Fix for chrome mouse move on click\n                if (isMoved && (startCoords.x !== endCoords.x || startCoords.y !== endCoords.y)) {\n                    endCoords = {\n                        x: e.pageX,\n                        y: e.pageY\n                    };\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY);\n                }\n\n                isMoved = false;\n            }\n\n            utils.removeClass(_this.core.outer, 'lg-grabbing');\n            utils.addClass(_this.core.outer, 'lg-grab');\n        });\n    };\n\n    Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY) {\n\n        var _this = this;\n        var _el = _this.core.___slide[_this.core.index].querySelector('.lg-img-wrap');\n        var image = _this.core.___slide[_this.core.index].querySelector('.lg-object');\n        var distanceX = -Math.abs(_el.getAttribute('data-x')) + (endCoords.x - startCoords.x);\n        var distanceY = -Math.abs(_el.getAttribute('data-y')) + (endCoords.y - startCoords.y);\n        var minY = (_this.core.outer.querySelector('.lg').clientHeight - image.offsetHeight) / 2;\n        var maxY = Math.abs(image.offsetHeight * Math.abs(image.getAttribute('data-scale')) - _this.core.outer.querySelector('.lg').clientHeight + minY);\n        var minX = (_this.core.outer.querySelector('.lg').clientWidth - image.offsetWidth) / 2;\n        var maxX = Math.abs(image.offsetWidth * Math.abs(image.getAttribute('data-scale')) - _this.core.outer.querySelector('.lg').clientWidth + minX);\n\n        if (Math.abs(endCoords.x - startCoords.x) > 15 || Math.abs(endCoords.y - startCoords.y) > 15) {\n            if (allowY) {\n                if (distanceY <= -maxY) {\n                    distanceY = -maxY;\n                } else if (distanceY >= -minY) {\n                    distanceY = -minY;\n                }\n            }\n\n            if (allowX) {\n                if (distanceX <= -maxX) {\n                    distanceX = -maxX;\n                } else if (distanceX >= -minX) {\n                    distanceX = -minX;\n                }\n            }\n\n            if (allowY) {\n                _el.setAttribute('data-y', Math.abs(distanceY));\n            } else {\n                distanceY = -Math.abs(_el.getAttribute('data-y'));\n            }\n\n            if (allowX) {\n                _el.setAttribute('data-x', Math.abs(distanceX));\n            } else {\n                distanceX = -Math.abs(_el.getAttribute('data-x'));\n            }\n\n            if (_this.core.s.useLeftForZoom) {\n                _el.style.left = distanceX + 'px';\n                _el.style.top = distanceY + 'px';\n            } else {\n                utils.setVendor(_el, 'Transform', 'translate3d(' + distanceX + 'px, ' + distanceY + 'px, 0)');\n            }\n        }\n    };\n\n    Zoom.prototype.destroy = function () {\n\n        var _this = this;\n\n        // Unbind all events added by lightGallery zoom plugin\n        utils.off(_this.core.el, '.lgzoom');\n        utils.off(window, '.lgzoom');\n        for (var i = 0; i < _this.core.___slide.length; i++) {\n            utils.off(_this.core.___slide[i], '.lgzoom');\n        }\n\n        utils.off(_this.core.el, '.lgtmzoom');\n        _this.resetZoom();\n        clearTimeout(_this.zoomabletimeout);\n        _this.zoomabletimeout = false;\n    };\n\n    window.lgModules.zoom = Zoom;\n});\n\n},{}]},{},[1])(1)\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lg-zoom.js/dist/lg-zoom.js\n");

/***/ }),

/***/ "./node_modules/lightgallery.js/dist/js/lightgallery.min.js":
/*!******************************************************************!*\
  !*** ./node_modules/lightgallery.js/dist/js/lightgallery.min.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var require;var require;/**!\n * lightgallery.js | 1.1.3 | February 11th 2019\n * http://sachinchoolur.github.io/lightgallery.js/\n * Copyright (c) 2016 Sachin N; \n * @license GPLv3 \n */\n!function(e){if(true)module.exports=e();else { var t; }}(function(){var e,t,s;return function(){function e(t,s,l){function i(r,d){if(!s[r]){if(!t[r]){var a=\"function\"==typeof require&&require;if(!d&&a)return require(r,!0);if(o)return o(r,!0);var n=new Error(\"Cannot find module '\"+r+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var u=s[r]={exports:{}};t[r][0].call(u.exports,function(e){return i(t[r][1][e]||e)},u,u.exports,e,t,s,l)}return s[r].exports}for(var o=\"function\"==typeof require&&require,r=0;r<l.length;r++)i(l[r]);return i}return e}()({1:[function(t,s,l){!function(t,s){if(\"function\"==typeof e&&e.amd)e([\"exports\"],s);else if(void 0!==l)s(l);else{var i={exports:{}};s(i.exports),t.lgUtils=i.exports}}(this,function(e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var t={getAttribute:function e(t,s){return t[s]},setAttribute:function e(t,s,l){t[s]=l},wrap:function e(t,s){if(t){var l=document.createElement(\"div\");l.className=s,t.parentNode.insertBefore(l,t),t.parentNode.removeChild(t),l.appendChild(t)}},addClass:function e(t,s){t&&(t.classList?t.classList.add(s):t.className+=\" \"+s)},removeClass:function e(t,s){t&&(t.classList?t.classList.remove(s):t.className=t.className.replace(new RegExp(\"(^|\\\\b)\"+s.split(\" \").join(\"|\")+\"(\\\\b|$)\",\"gi\"),\" \"))},hasClass:function e(t,s){return t.classList?t.classList.contains(s):new RegExp(\"(^| )\"+s+\"( |$)\",\"gi\").test(t.className)},setVendor:function e(t,s,l){t&&(t.style[s.charAt(0).toLowerCase()+s.slice(1)]=l,t.style[\"webkit\"+s]=l,t.style[\"moz\"+s]=l,t.style[\"ms\"+s]=l,t.style[\"o\"+s]=l)},trigger:function e(t,s){var l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(t){var i=new CustomEvent(s,{detail:l});t.dispatchEvent(i)}},Listener:{uid:0},on:function e(s,l,i){var o=this;s&&l.split(\" \").forEach(function(e){var l=o.getAttribute(s,\"lg-event-uid\")||\"\";t.Listener.uid++,l+=\"&\"+t.Listener.uid,o.setAttribute(s,\"lg-event-uid\",l),t.Listener[e+t.Listener.uid]=i,s.addEventListener(e.split(\".\")[0],i,!1)})},off:function e(s,l){if(s){var i=this.getAttribute(s,\"lg-event-uid\");if(i){i=i.split(\"&\");for(var o=0;o<i.length;o++)if(i[o]){var r=l+i[o];if(\".\"===r.substring(0,1))for(var d in t.Listener)t.Listener.hasOwnProperty(d)&&d.split(\".\").indexOf(r.split(\".\")[1])>-1&&(s.removeEventListener(d.split(\".\")[0],t.Listener[d]),this.setAttribute(s,\"lg-event-uid\",this.getAttribute(s,\"lg-event-uid\").replace(\"&\"+i[o],\"\")),delete t.Listener[d]);else s.removeEventListener(r.split(\".\")[0],t.Listener[r]),this.setAttribute(s,\"lg-event-uid\",this.getAttribute(s,\"lg-event-uid\").replace(\"&\"+i[o],\"\")),delete t.Listener[r]}}}},param:function e(t){return Object.keys(t).map(function(e){return encodeURIComponent(e)+\"=\"+encodeURIComponent(t[e])}).join(\"&\")}};e.default=t})},{}],2:[function(t,s,l){!function(s,i){if(\"function\"==typeof e&&e.amd)e([\"./lg-utils\"],i);else if(void 0!==l)i(t(\"./lg-utils\"));else{var o={exports:{}};i(s.lgUtils),s.lightgallery=o.exports}}(this,function(e){\"use strict\";function t(e){return e&&e.__esModule?e:{default:e}}function s(e,t){if(this.el=e,this.s=i({},o,t),this.s.dynamic&&\"undefined\"!==this.s.dynamicEl&&this.s.dynamicEl.constructor===Array&&!this.s.dynamicEl.length)throw\"When using dynamic mode, you must also define dynamicEl as an Array.\";return this.modules={},this.lGalleryOn=!1,this.lgBusy=!1,this.hideBartimeout=!1,this.isTouch=\"ontouchstart\"in document.documentElement,this.s.slideEndAnimatoin&&(this.s.hideControlOnEnd=!1),this.items=[],this.s.dynamic?this.items=this.s.dynamicEl:\"this\"===this.s.selector?this.items.push(this.el):\"\"!==this.s.selector?this.s.selectWithin?this.items=document.querySelector(this.s.selectWithin).querySelectorAll(this.s.selector):this.items=this.el.querySelectorAll(this.s.selector):this.items=this.el.children,this.___slide=\"\",this.outer=\"\",this.init(),this}var l=t(e),i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var l in s)Object.prototype.hasOwnProperty.call(s,l)&&(e[l]=s[l])}return e};!function(){function e(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var s=document.createEvent(\"CustomEvent\");return s.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),s}if(\"function\"==typeof window.CustomEvent)return!1;e.prototype=window.Event.prototype,window.CustomEvent=e}(),window.utils=l.default,window.lgData={uid:0},window.lgModules={};var o={mode:\"lg-slide\",cssEasing:\"ease\",easing:\"linear\",speed:600,height:\"100%\",width:\"100%\",addClass:\"\",startClass:\"lg-start-zoom\",backdropDuration:150,hideBarsDelay:6e3,useLeft:!1,closable:!0,loop:!0,escKey:!0,keyPress:!0,controls:!0,slideEndAnimatoin:!0,hideControlOnEnd:!1,mousewheel:!1,getCaptionFromTitleOrAlt:!0,appendSubHtmlTo:\".lg-sub-html\",subHtmlSelectorRelative:!1,preload:1,showAfterLoad:!0,selector:\"\",selectWithin:\"\",nextHtml:\"\",prevHtml:\"\",index:!1,iframeMaxWidth:\"100%\",download:!0,counter:!0,appendCounterTo:\".lg-toolbar\",swipeThreshold:50,enableSwipe:!0,enableDrag:!0,dynamic:!1,dynamicEl:[],galleryId:1};s.prototype.init=function(){var e=this;e.s.preload>e.items.length&&(e.s.preload=e.items.length);var t=window.location.hash;if(t.indexOf(\"lg=\"+this.s.galleryId)>0&&(e.index=parseInt(t.split(\"&slide=\")[1],10),l.default.addClass(document.body,\"lg-from-hash\"),l.default.hasClass(document.body,\"lg-on\")||(l.default.addClass(document.body,\"lg-on\"),setTimeout(function(){e.build(e.index)}))),e.s.dynamic)l.default.trigger(this.el,\"onBeforeOpen\"),e.index=e.s.index||0,l.default.hasClass(document.body,\"lg-on\")||(l.default.addClass(document.body,\"lg-on\"),setTimeout(function(){e.build(e.index)}));else for(var s=0;s<e.items.length;s++)!function(t){l.default.on(e.items[t],\"click.lgcustom\",function(s){s.preventDefault(),l.default.trigger(e.el,\"onBeforeOpen\"),e.index=e.s.index||t,l.default.hasClass(document.body,\"lg-on\")||(e.build(e.index),l.default.addClass(document.body,\"lg-on\"))})}(s)},s.prototype.build=function(e){var t=this;t.structure();for(var s in window.lgModules)t.modules[s]=new window.lgModules[s](t.el);t.slide(e,!1,!1),t.s.keyPress&&t.keyPress(),t.items.length>1&&(t.arrow(),setTimeout(function(){t.enableDrag(),t.enableSwipe()},50),t.s.mousewheel&&t.mousewheel()),t.counter(),t.closeGallery(),l.default.trigger(t.el,\"onAfterOpen\"),l.default.on(t.outer,\"mousemove.lg click.lg touchstart.lg\",function(){l.default.removeClass(t.outer,\"lg-hide-items\"),clearTimeout(t.hideBartimeout),t.hideBartimeout=setTimeout(function(){l.default.addClass(t.outer,\"lg-hide-items\")},t.s.hideBarsDelay)})},s.prototype.structure=function(){var e=\"\",t=\"\",s=0,i=\"\",o,r=this;for(document.body.insertAdjacentHTML(\"beforeend\",'<div class=\"lg-backdrop\"></div>'),l.default.setVendor(document.querySelector(\".lg-backdrop\"),\"TransitionDuration\",this.s.backdropDuration+\"ms\"),s=0;s<this.items.length;s++)e+='<div class=\"lg-item\"></div>';if(this.s.controls&&this.items.length>1&&(t='<div class=\"lg-actions\"><div class=\"lg-prev lg-icon\">'+this.s.prevHtml+'</div><div class=\"lg-next lg-icon\">'+this.s.nextHtml+\"</div></div>\"),\".lg-sub-html\"===this.s.appendSubHtmlTo&&(i='<div class=\"lg-sub-html\"></div>'),o='<div class=\"lg-outer '+this.s.addClass+\" \"+this.s.startClass+'\"><div class=\"lg\" style=\"width:'+this.s.width+\"; height:\"+this.s.height+'\"><div class=\"lg-inner\">'+e+'</div><div class=\"lg-toolbar group\"><span class=\"lg-close lg-icon\"></span></div>'+t+i+\"</div></div>\",document.body.insertAdjacentHTML(\"beforeend\",o),this.outer=document.querySelector(\".lg-outer\"),this.___slide=this.outer.querySelectorAll(\".lg-item\"),this.s.useLeft?(l.default.addClass(this.outer,\"lg-use-left\"),this.s.mode=\"lg-slide\"):l.default.addClass(this.outer,\"lg-use-css3\"),r.setTop(),l.default.on(window,\"resize.lg orientationchange.lg\",function(){setTimeout(function(){r.setTop()},100)}),l.default.addClass(this.___slide[this.index],\"lg-current\"),this.doCss()?l.default.addClass(this.outer,\"lg-css3\"):(l.default.addClass(this.outer,\"lg-css\"),this.s.speed=0),l.default.addClass(this.outer,this.s.mode),this.s.enableDrag&&this.items.length>1&&l.default.addClass(this.outer,\"lg-grab\"),this.s.showAfterLoad&&l.default.addClass(this.outer,\"lg-show-after-load\"),this.doCss()){var d=this.outer.querySelector(\".lg-inner\");l.default.setVendor(d,\"TransitionTimingFunction\",this.s.cssEasing),l.default.setVendor(d,\"TransitionDuration\",this.s.speed+\"ms\")}setTimeout(function(){l.default.addClass(document.querySelector(\".lg-backdrop\"),\"in\")}),setTimeout(function(){l.default.addClass(r.outer,\"lg-visible\")},this.s.backdropDuration),this.s.download&&this.outer.querySelector(\".lg-toolbar\").insertAdjacentHTML(\"beforeend\",'<a id=\"lg-download\" target=\"_blank\" download class=\"lg-download lg-icon\"></a>'),this.prevScrollTop=document.documentElement.scrollTop||document.body.scrollTop},s.prototype.setTop=function(){if(\"100%\"!==this.s.height){var e=window.innerHeight,t=(e-parseInt(this.s.height,10))/2,s=this.outer.querySelector(\".lg\");e>=parseInt(this.s.height,10)?s.style.top=t+\"px\":s.style.top=\"0px\"}},s.prototype.doCss=function(){return!!function e(){var t=[\"transition\",\"MozTransition\",\"WebkitTransition\",\"OTransition\",\"msTransition\",\"KhtmlTransition\"],s=document.documentElement,l=0;for(l=0;l<t.length;l++)if(t[l]in s.style)return!0}()},s.prototype.isVideo=function(e,t){var s;if(s=this.s.dynamic?this.s.dynamicEl[t].html:this.items[t].getAttribute(\"data-html\"),!e&&s)return{html5:!0};var l=e.match(/\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)/i),i=e.match(/\\/\\/(?:www\\.)?vimeo.com\\/([0-9a-z\\-_]+)/i),o=e.match(/\\/\\/(?:www\\.)?dai.ly\\/([0-9a-z\\-_]+)/i),r=e.match(/\\/\\/(?:www\\.)?(?:vk\\.com|vkontakte\\.ru)\\/(?:video_ext\\.php\\?)(.*)/i);return l?{youtube:l}:i?{vimeo:i}:o?{dailymotion:o}:r?{vk:r}:void 0},s.prototype.counter=function(){this.s.counter&&this.outer.querySelector(this.s.appendCounterTo).insertAdjacentHTML(\"beforeend\",'<div id=\"lg-counter\"><span id=\"lg-counter-current\">'+(parseInt(this.index,10)+1)+'</span> / <span id=\"lg-counter-all\">'+this.items.length+\"</span></div>\")},s.prototype.addHtml=function(e){var t=null,s;if(this.s.dynamic?t=this.s.dynamicEl[e].subHtml:(s=this.items[e],t=s.getAttribute(\"data-sub-html\"),this.s.getCaptionFromTitleOrAlt&&!t&&(t=s.getAttribute(\"title\"))&&s.querySelector(\"img\")&&(t=s.querySelector(\"img\").getAttribute(\"alt\"))),void 0!==t&&null!==t){var i=t.substring(0,1);\".\"!==i&&\"#\"!==i||(t=this.s.subHtmlSelectorRelative&&!this.s.dynamic?s.querySelector(t).innerHTML:document.querySelector(t).innerHTML)}else t=\"\";\".lg-sub-html\"===this.s.appendSubHtmlTo?this.outer.querySelector(this.s.appendSubHtmlTo).innerHTML=t:this.___slide[e].insertAdjacentHTML(\"beforeend\",t),void 0!==t&&null!==t&&(\"\"===t?l.default.addClass(this.outer.querySelector(this.s.appendSubHtmlTo),\"lg-empty-html\"):l.default.removeClass(this.outer.querySelector(this.s.appendSubHtmlTo),\"lg-empty-html\")),l.default.trigger(this.el,\"onAfterAppendSubHtml\",{index:e})},s.prototype.preload=function(e){var t=1,s=1;for(t=1;t<=this.s.preload&&!(t>=this.items.length-e);t++)this.loadContent(e+t,!1,0);for(s=1;s<=this.s.preload&&!(e-s<0);s++)this.loadContent(e-s,!1,0)},s.prototype.loadContent=function(e,t,s){var i=this,o=!1,r,d,a,n,u,c,g=function e(t){for(var s=[],l=[],i=0;i<t.length;i++){var o=t[i].split(\" \");\"\"===o[0]&&o.splice(0,1),l.push(o[0]),s.push(o[1])}for(var r=window.innerWidth,a=0;a<s.length;a++)if(parseInt(s[a],10)>r){d=l[a];break}};if(i.s.dynamic){if(i.s.dynamicEl[e].poster&&(o=!0,a=i.s.dynamicEl[e].poster),c=i.s.dynamicEl[e].html,d=i.s.dynamicEl[e].src,i.s.dynamicEl[e].responsive){g(i.s.dynamicEl[e].responsive.split(\",\"))}n=i.s.dynamicEl[e].srcset,u=i.s.dynamicEl[e].sizes}else{if(i.items[e].getAttribute(\"data-poster\")&&(o=!0,a=i.items[e].getAttribute(\"data-poster\")),c=i.items[e].getAttribute(\"data-html\"),d=i.items[e].getAttribute(\"href\")||i.items[e].getAttribute(\"data-src\"),i.items[e].getAttribute(\"data-responsive\")){g(i.items[e].getAttribute(\"data-responsive\").split(\",\"))}n=i.items[e].getAttribute(\"data-srcset\"),u=i.items[e].getAttribute(\"data-sizes\")}var f=!1;i.s.dynamic?i.s.dynamicEl[e].iframe&&(f=!0):\"true\"===i.items[e].getAttribute(\"data-iframe\")&&(f=!0);var h=i.isVideo(d,e);if(!l.default.hasClass(i.___slide[e],\"lg-loaded\")){if(f)i.___slide[e].insertAdjacentHTML(\"afterbegin\",'<div class=\"lg-video-cont\" style=\"max-width:'+i.s.iframeMaxWidth+'\"><div class=\"lg-video\"><iframe class=\"lg-object\" frameborder=\"0\" src=\"'+d+'\"  allowfullscreen=\"true\"></iframe></div></div>');else if(o){var m=\"\";m=h&&h.youtube?\"lg-has-youtube\":h&&h.vimeo?\"lg-has-vimeo\":\"lg-has-html5\",i.___slide[e].insertAdjacentHTML(\"beforeend\",'<div class=\"lg-video-cont '+m+' \"><div class=\"lg-video\"><span class=\"lg-video-play\"></span><img class=\"lg-object lg-has-poster\" src=\"'+a+'\" /></div></div>')}else h?(i.___slide[e].insertAdjacentHTML(\"beforeend\",'<div class=\"lg-video-cont \"><div class=\"lg-video\"></div></div>'),l.default.trigger(i.el,\"hasVideo\",{index:e,src:d,html:c})):i.___slide[e].insertAdjacentHTML(\"beforeend\",'<div class=\"lg-img-wrap\"><img class=\"lg-object lg-image\" src=\"'+d+'\" /></div>');if(l.default.trigger(i.el,\"onAferAppendSlide\",{index:e}),r=i.___slide[e].querySelector(\".lg-object\"),u&&r.setAttribute(\"sizes\",u),n){r.setAttribute(\"srcset\",n);try{picturefill({elements:[r[0]]})}catch(e){console.error(\"Make sure you have included Picturefill version 2\")}}\".lg-sub-html\"!==this.s.appendSubHtmlTo&&i.addHtml(e),l.default.addClass(i.___slide[e],\"lg-loaded\")}l.default.on(i.___slide[e].querySelector(\".lg-object\"),\"load.lg error.lg\",function(){var t=0;s&&!l.default.hasClass(document.body,\"lg-from-hash\")&&(t=s),setTimeout(function(){l.default.addClass(i.___slide[e],\"lg-complete\"),l.default.trigger(i.el,\"onSlideItemLoad\",{index:e,delay:s||0})},t)}),h&&h.html5&&!o&&l.default.addClass(i.___slide[e],\"lg-complete\"),!0===t&&(l.default.hasClass(i.___slide[e],\"lg-complete\")?i.preload(e):l.default.on(i.___slide[e].querySelector(\".lg-object\"),\"load.lg error.lg\",function(){i.preload(e)}))},s.prototype.slide=function(e,t,s){for(var i=0,o=0;o<this.___slide.length;o++)if(l.default.hasClass(this.___slide[o],\"lg-current\")){i=o;break}var r=this;if(!r.lGalleryOn||i!==e){var d=this.___slide.length,a=r.lGalleryOn?this.s.speed:0,n=!1,u=!1;if(!r.lgBusy){if(this.s.download){var c;c=r.s.dynamic?!1!==r.s.dynamicEl[e].downloadUrl&&(r.s.dynamicEl[e].downloadUrl||r.s.dynamicEl[e].src):\"false\"!==r.items[e].getAttribute(\"data-download-url\")&&(r.items[e].getAttribute(\"data-download-url\")||r.items[e].getAttribute(\"href\")||r.items[e].getAttribute(\"data-src\")),c?(document.getElementById(\"lg-download\").setAttribute(\"href\",c),l.default.removeClass(r.outer,\"lg-hide-download\")):l.default.addClass(r.outer,\"lg-hide-download\")}if(l.default.trigger(r.el,\"onBeforeSlide\",{prevIndex:i,index:e,fromTouch:t,fromThumb:s}),r.lgBusy=!0,clearTimeout(r.hideBartimeout),\".lg-sub-html\"===this.s.appendSubHtmlTo&&setTimeout(function(){r.addHtml(e)},a),this.arrowDisable(e),t){var g=e-1,f=e+1;0===e&&i===d-1?(f=0,g=d-1):e===d-1&&0===i&&(f=0,g=d-1),l.default.removeClass(r.outer.querySelector(\".lg-prev-slide\"),\"lg-prev-slide\"),l.default.removeClass(r.outer.querySelector(\".lg-current\"),\"lg-current\"),l.default.removeClass(r.outer.querySelector(\".lg-next-slide\"),\"lg-next-slide\"),l.default.addClass(r.___slide[g],\"lg-prev-slide\"),l.default.addClass(r.___slide[f],\"lg-next-slide\"),l.default.addClass(r.___slide[e],\"lg-current\")}else{l.default.addClass(r.outer,\"lg-no-trans\");for(var h=0;h<this.___slide.length;h++)l.default.removeClass(this.___slide[h],\"lg-prev-slide\"),l.default.removeClass(this.___slide[h],\"lg-next-slide\");e<i?(u=!0,0!==e||i!==d-1||s||(u=!1,n=!0)):e>i&&(n=!0,e!==d-1||0!==i||s||(u=!0,n=!1)),u?(l.default.addClass(this.___slide[e],\"lg-prev-slide\"),l.default.addClass(this.___slide[i],\"lg-next-slide\")):n&&(l.default.addClass(this.___slide[e],\"lg-next-slide\"),l.default.addClass(this.___slide[i],\"lg-prev-slide\")),setTimeout(function(){l.default.removeClass(r.outer.querySelector(\".lg-current\"),\"lg-current\"),l.default.addClass(r.___slide[e],\"lg-current\"),l.default.removeClass(r.outer,\"lg-no-trans\")},50)}r.lGalleryOn?(setTimeout(function(){r.loadContent(e,!0,0)},this.s.speed+50),setTimeout(function(){r.lgBusy=!1,l.default.trigger(r.el,\"onAfterSlide\",{prevIndex:i,index:e,fromTouch:t,fromThumb:s})},this.s.speed)):(r.loadContent(e,!0,r.s.backdropDuration),r.lgBusy=!1,l.default.trigger(r.el,\"onAfterSlide\",{prevIndex:i,index:e,fromTouch:t,fromThumb:s})),r.lGalleryOn=!0,this.s.counter&&document.getElementById(\"lg-counter-current\")&&(document.getElementById(\"lg-counter-current\").innerHTML=e+1)}}},s.prototype.goToNextSlide=function(e){var t=this;t.lgBusy||(t.index+1<t.___slide.length?(t.index++,l.default.trigger(t.el,\"onBeforeNextSlide\",{index:t.index}),t.slide(t.index,e,!1)):t.s.loop?(t.index=0,l.default.trigger(t.el,\"onBeforeNextSlide\",{index:t.index}),t.slide(t.index,e,!1)):t.s.slideEndAnimatoin&&(l.default.addClass(t.outer,\"lg-right-end\"),setTimeout(function(){l.default.removeClass(t.outer,\"lg-right-end\")},400)))},s.prototype.goToPrevSlide=function(e){var t=this;t.lgBusy||(t.index>0?(t.index--,l.default.trigger(t.el,\"onBeforePrevSlide\",{index:t.index,fromTouch:e}),t.slide(t.index,e,!1)):t.s.loop?(t.index=t.items.length-1,l.default.trigger(t.el,\"onBeforePrevSlide\",{index:t.index,fromTouch:e}),t.slide(t.index,e,!1)):t.s.slideEndAnimatoin&&(l.default.addClass(t.outer,\"lg-left-end\"),setTimeout(function(){l.default.removeClass(t.outer,\"lg-left-end\")},400)))},s.prototype.keyPress=function(){var e=this;this.items.length>1&&l.default.on(window,\"keyup.lg\",function(t){e.items.length>1&&(37===t.keyCode&&(t.preventDefault(),e.goToPrevSlide()),39===t.keyCode&&(t.preventDefault(),e.goToNextSlide()))}),l.default.on(window,\"keydown.lg\",function(t){!0===e.s.escKey&&27===t.keyCode&&(t.preventDefault(),l.default.hasClass(e.outer,\"lg-thumb-open\")?l.default.removeClass(e.outer,\"lg-thumb-open\"):e.destroy())})},s.prototype.arrow=function(){var e=this;l.default.on(this.outer.querySelector(\".lg-prev\"),\"click.lg\",function(){e.goToPrevSlide()}),l.default.on(this.outer.querySelector(\".lg-next\"),\"click.lg\",function(){e.goToNextSlide()})},s.prototype.arrowDisable=function(e){if(!this.s.loop&&this.s.hideControlOnEnd){var t=this.outer.querySelector(\".lg-next\"),s=this.outer.querySelector(\".lg-prev\");e+1<this.___slide.length?(t.removeAttribute(\"disabled\"),l.default.removeClass(t,\"disabled\")):(t.setAttribute(\"disabled\",\"disabled\"),l.default.addClass(t,\"disabled\")),e>0?(s.removeAttribute(\"disabled\"),l.default.removeClass(s,\"disabled\")):(s.setAttribute(\"disabled\",\"disabled\"),l.default.addClass(s,\"disabled\"))}},s.prototype.setTranslate=function(e,t,s){this.s.useLeft?e.style.left=t:l.default.setVendor(e,\"Transform\",\"translate3d(\"+t+\"px, \"+s+\"px, 0px)\")},s.prototype.touchMove=function(e,t){var s=t-e;Math.abs(s)>15&&(l.default.addClass(this.outer,\"lg-dragging\"),this.setTranslate(this.___slide[this.index],s,0),this.setTranslate(document.querySelector(\".lg-prev-slide\"),-this.___slide[this.index].clientWidth+s,0),this.setTranslate(document.querySelector(\".lg-next-slide\"),this.___slide[this.index].clientWidth+s,0))},s.prototype.touchEnd=function(e){var t=this;\"lg-slide\"!==t.s.mode&&l.default.addClass(t.outer,\"lg-slide\");for(var s=0;s<this.___slide.length;s++)l.default.hasClass(this.___slide[s],\"lg-current\")||l.default.hasClass(this.___slide[s],\"lg-prev-slide\")||l.default.hasClass(this.___slide[s],\"lg-next-slide\")||(this.___slide[s].style.opacity=\"0\");setTimeout(function(){l.default.removeClass(t.outer,\"lg-dragging\"),e<0&&Math.abs(e)>t.s.swipeThreshold?t.goToNextSlide(!0):e>0&&Math.abs(e)>t.s.swipeThreshold?t.goToPrevSlide(!0):Math.abs(e)<5&&l.default.trigger(t.el,\"onSlideClick\");for(var s=0;s<t.___slide.length;s++)t.___slide[s].removeAttribute(\"style\")}),setTimeout(function(){l.default.hasClass(t.outer,\"lg-dragging\")||\"lg-slide\"===t.s.mode||l.default.removeClass(t.outer,\"lg-slide\")},t.s.speed+100)},s.prototype.enableSwipe=function(){var e=this,t=0,s=0,i=!1;if(e.s.enableSwipe&&e.isTouch&&e.doCss()){for(var o=0;o<e.___slide.length;o++)l.default.on(e.___slide[o],\"touchstart.lg\",function(s){l.default.hasClass(e.outer,\"lg-zoomed\")||e.lgBusy||(s.preventDefault(),e.manageSwipeClass(),t=s.targetTouches[0].pageX)});for(var r=0;r<e.___slide.length;r++)l.default.on(e.___slide[r],\"touchmove.lg\",function(o){l.default.hasClass(e.outer,\"lg-zoomed\")||(o.preventDefault(),s=o.targetTouches[0].pageX,e.touchMove(t,s),i=!0)});for(var d=0;d<e.___slide.length;d++)l.default.on(e.___slide[d],\"touchend.lg\",function(){l.default.hasClass(e.outer,\"lg-zoomed\")||(i?(i=!1,e.touchEnd(s-t)):l.default.trigger(e.el,\"onSlideClick\"))})}},s.prototype.enableDrag=function(){var e=this,t=0,s=0,i=!1,o=!1;if(e.s.enableDrag&&!e.isTouch&&e.doCss()){for(var r=0;r<e.___slide.length;r++)l.default.on(e.___slide[r],\"mousedown.lg\",function(s){l.default.hasClass(e.outer,\"lg-zoomed\")||(l.default.hasClass(s.target,\"lg-object\")||l.default.hasClass(s.target,\"lg-video-play\"))&&(s.preventDefault(),e.lgBusy||(e.manageSwipeClass(),t=s.pageX,i=!0,e.outer.scrollLeft+=1,e.outer.scrollLeft-=1,l.default.removeClass(e.outer,\"lg-grab\"),l.default.addClass(e.outer,\"lg-grabbing\"),l.default.trigger(e.el,\"onDragstart\")))});l.default.on(window,\"mousemove.lg\",function(r){i&&(o=!0,s=r.pageX,e.touchMove(t,s),l.default.trigger(e.el,\"onDragmove\"))}),l.default.on(window,\"mouseup.lg\",function(r){o?(o=!1,e.touchEnd(s-t),l.default.trigger(e.el,\"onDragend\")):(l.default.hasClass(r.target,\"lg-object\")||l.default.hasClass(r.target,\"lg-video-play\"))&&l.default.trigger(e.el,\"onSlideClick\"),i&&(i=!1,l.default.removeClass(e.outer,\"lg-grabbing\"),l.default.addClass(e.outer,\"lg-grab\"))})}},s.prototype.manageSwipeClass=function(){var e=this.index+1,t=this.index-1,s=this.___slide.length;this.s.loop&&(0===this.index?t=s-1:this.index===s-1&&(e=0));for(var i=0;i<this.___slide.length;i++)l.default.removeClass(this.___slide[i],\"lg-next-slide\"),l.default.removeClass(this.___slide[i],\"lg-prev-slide\");t>-1&&l.default.addClass(this.___slide[t],\"lg-prev-slide\"),l.default.addClass(this.___slide[e],\"lg-next-slide\")},s.prototype.mousewheel=function(){var e=this;l.default.on(e.outer,\"mousewheel.lg\",function(t){t.deltaY&&(t.deltaY>0?e.goToPrevSlide():e.goToNextSlide(),t.preventDefault())})},s.prototype.closeGallery=function(){var e=this,t=!1;l.default.on(this.outer.querySelector(\".lg-close\"),\"click.lg\",function(){e.destroy()}),e.s.closable&&(l.default.on(e.outer,\"mousedown.lg\",function(e){t=!!(l.default.hasClass(e.target,\"lg-outer\")||l.default.hasClass(e.target,\"lg-item\")||l.default.hasClass(e.target,\"lg-img-wrap\"))}),l.default.on(e.outer,\"mouseup.lg\",function(s){(l.default.hasClass(s.target,\"lg-outer\")||l.default.hasClass(s.target,\"lg-item\")||l.default.hasClass(s.target,\"lg-img-wrap\")&&t)&&(l.default.hasClass(e.outer,\"lg-dragging\")||e.destroy())}))},s.prototype.destroy=function(e){var t=this;if(e||l.default.trigger(t.el,\"onBeforeClose\"),document.body.scrollTop=t.prevScrollTop,document.documentElement.scrollTop=t.prevScrollTop,e){if(!t.s.dynamic)for(var s=0;s<this.items.length;s++)l.default.off(this.items[s],\".lg\"),l.default.off(this.items[s],\".lgcustom\");var i=t.el.getAttribute(\"lg-uid\");delete window.lgData[i],t.el.removeAttribute(\"lg-uid\")}l.default.off(this.el,\".lgtm\");for(var o in window.lgModules)t.modules[o]&&t.modules[o].destroy(e);this.lGalleryOn=!1,clearTimeout(t.hideBartimeout),this.hideBartimeout=!1,l.default.off(window,\".lg\"),l.default.removeClass(document.body,\"lg-on\"),l.default.removeClass(document.body,\"lg-from-hash\"),t.outer&&l.default.removeClass(t.outer,\"lg-visible\"),l.default.removeClass(document.querySelector(\".lg-backdrop\"),\"in\"),setTimeout(function(){try{t.outer&&t.outer.parentNode.removeChild(t.outer),document.querySelector(\".lg-backdrop\")&&document.querySelector(\".lg-backdrop\").parentNode.removeChild(document.querySelector(\".lg-backdrop\")),e||l.default.trigger(t.el,\"onCloseAfter\")}catch(e){}},t.s.backdropDuration+50)},window.lightGallery=function(e,t){if(e)try{if(e.getAttribute(\"lg-uid\"))try{window.lgData[e.getAttribute(\"lg-uid\")].init()}catch(e){console.error(\"lightGallery has not initiated properly\")}else{var l=\"lg\"+window.lgData.uid++;window.lgData[l]=new s(e,t),e.setAttribute(\"lg-uid\",l)}}catch(e){console.error(\"lightGallery has not initiated properly\")}}})},{\"./lg-utils\":1}]},{},[2])(2)});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lightgallery.js/dist/js/lightgallery.min.js\n");

/***/ }),

/***/ "./node_modules/spin.js/spin.js":
/*!**************************************!*\
  !*** ./node_modules/spin.js/spin.js ***!
  \**************************************/
/*! exports provided: Spinner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Spinner\", function() { return Spinner; });\nvar __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign({}, defaults, opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\n\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/spin.js/spin.js\n");

/***/ }),

/***/ "./resources/js/backend.js":
/*!*********************************!*\
  !*** ./resources/js/backend.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Backend =\n/*#__PURE__*/\nfunction () {\n  function Backend() {\n    _classCallCheck(this, Backend);\n  }\n\n  _createClass(Backend, [{\n    key: \"callBackend\",\n    value: function callBackend(url, data, callback, query, failure, async) {\n      jQuery.ajax({\n        url: url + '?' + query,\n        async: async,\n        data: data,\n        success: function success(d) {\n          callback(d);\n        },\n        error: function error(d) {\n          failure(d);\n        }\n      });\n    }\n  }]);\n\n  return Backend;\n}();\n\nmodule.exports = Backend;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYmFja2VuZC5qcz9iODcxIl0sIm5hbWVzIjpbIkJhY2tlbmQiLCJ1cmwiLCJkYXRhIiwiY2FsbGJhY2siLCJxdWVyeSIsImZhaWx1cmUiLCJhc3luYyIsImpRdWVyeSIsImFqYXgiLCJzdWNjZXNzIiwiZCIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0lBQU1BLE87OztBQUVKLHFCQUFjO0FBQUE7QUFFYjs7OztnQ0FFV0MsRyxFQUFLQyxJLEVBQU1DLFEsRUFBVUMsSyxFQUFPQyxPLEVBQVNDLEssRUFBTztBQUN0REMsWUFBTSxDQUFDQyxJQUFQLENBQVk7QUFDVlAsV0FBRyxFQUFFQSxHQUFHLEdBQUcsR0FBTixHQUFZRyxLQURQO0FBRVZFLGFBQUssRUFBRUEsS0FGRztBQUdWSixZQUFJLEVBQUVBLElBSEk7QUFJVk8sZUFBTyxFQUFFLGlCQUFTQyxDQUFULEVBQVk7QUFDbkJQLGtCQUFRLENBQUNPLENBQUQsQ0FBUjtBQUNELFNBTlM7QUFPVkMsYUFBSyxFQUFFLGVBQVNELENBQVQsRUFBWTtBQUNqQkwsaUJBQU8sQ0FBQ0ssQ0FBRCxDQUFQO0FBQ0Q7QUFUUyxPQUFaO0FBV0Q7Ozs7OztBQUdIRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLE9BQWpCIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL2JhY2tlbmQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCYWNrZW5kIHtcblxuICBjb25zdHJ1Y3RvcigpIHtcblxuICB9XG5cbiAgY2FsbEJhY2tlbmQodXJsLCBkYXRhLCBjYWxsYmFjaywgcXVlcnksIGZhaWx1cmUsIGFzeW5jKSB7XG4gICAgalF1ZXJ5LmFqYXgoe1xuICAgICAgdXJsOiB1cmwgKyAnPycgKyBxdWVyeSxcbiAgICAgIGFzeW5jOiBhc3luYyxcbiAgICAgIGRhdGE6IGRhdGEsXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIGNhbGxiYWNrKGQpO1xuICAgICAgfSxcbiAgICAgIGVycm9yOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIGZhaWx1cmUoZCk7XG4gICAgICB9LFxuICAgIH0pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQmFja2VuZDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/backend.js\n");

/***/ }),

/***/ "./resources/js/cards.js":
/*!*******************************!*\
  !*** ./resources/js/cards.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nBackend = __webpack_require__(/*! ./backend */ \"./resources/js/backend.js\");\n\nvar Cards =\n/*#__PURE__*/\nfunction (_Backend) {\n  _inherits(Cards, _Backend);\n\n  function Cards() {\n    var _this;\n\n    _classCallCheck(this, Cards);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cards).call(this));\n    _this.cards = [];\n    return _this;\n  }\n\n  _createClass(Cards, [{\n    key: \"fetchCards\",\n    value: function fetchCards(query, success, failure) {\n      var _this2 = this;\n\n      this.callBackend('/getCards', null, function (data) {\n        _this2.setCards(data);\n\n        success();\n      }, query, failure);\n    }\n  }, {\n    key: \"setCards\",\n    value: function setCards(m) {\n      this.cards = m;\n    }\n  }]);\n\n  return Cards;\n}(Backend);\n\nmodule.exports = Cards;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY2FyZHMuanM/MjM2YSJdLCJuYW1lcyI6WyJCYWNrZW5kIiwicmVxdWlyZSIsIkNhcmRzIiwiY2FyZHMiLCJxdWVyeSIsInN1Y2Nlc3MiLCJmYWlsdXJlIiwiY2FsbEJhY2tlbmQiLCJkYXRhIiwic2V0Q2FyZHMiLCJtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLE9BQU8sR0FBR0MsbUJBQU8sQ0FBQyw0Q0FBRCxDQUFqQjs7SUFFTUMsSzs7Ozs7QUFFRixtQkFBYztBQUFBOztBQUFBOztBQUNWO0FBQ0EsVUFBS0MsS0FBTCxHQUFhLEVBQWI7QUFGVTtBQUdiOzs7OytCQUVVQyxLLEVBQU9DLE8sRUFBU0MsTyxFQUFTO0FBQUE7O0FBQ2hDLFdBQUtDLFdBQUwsQ0FBaUIsV0FBakIsRUFBOEIsSUFBOUIsRUFBcUMsVUFBQUMsSUFBSSxFQUFJO0FBQ3pDLGNBQUksQ0FBQ0MsUUFBTCxDQUFjRCxJQUFkOztBQUNBSCxlQUFPO0FBQ1YsT0FIRCxFQUdHRCxLQUhILEVBR1VFLE9BSFY7QUFJSDs7OzZCQUVRSSxDLEVBQUc7QUFDUixXQUFLUCxLQUFMLEdBQWFPLENBQWI7QUFDSDs7OztFQWhCZVYsTzs7QUFxQnBCVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJWLEtBQWpCIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL2NhcmRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiQmFja2VuZCA9IHJlcXVpcmUoJy4vYmFja2VuZCcpO1xuXG5jbGFzcyBDYXJkcyBleHRlbmRzIEJhY2tlbmQge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuY2FyZHMgPSBbXTtcbiAgICB9XG5cbiAgICBmZXRjaENhcmRzKHF1ZXJ5LCBzdWNjZXNzLCBmYWlsdXJlKSB7XG4gICAgICAgIHRoaXMuY2FsbEJhY2tlbmQoJy9nZXRDYXJkcycsIG51bGwsICBkYXRhID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0Q2FyZHMoZGF0YSk7XG4gICAgICAgICAgICBzdWNjZXNzKCk7XG4gICAgICAgIH0sIHF1ZXJ5LCBmYWlsdXJlKTtcbiAgICB9XG5cbiAgICBzZXRDYXJkcyhtKSB7XG4gICAgICAgIHRoaXMuY2FyZHMgPSBtO1xuICAgIH1cblxufVxuXG5cbm1vZHVsZS5leHBvcnRzID0gQ2FyZHM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/cards.js\n");

/***/ }),

/***/ "./resources/js/gallery.js":
/*!*********************************!*\
  !*** ./resources/js/gallery.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n__webpack_require__(/*! lightgallery.js/dist/js/lightgallery.min.js */ \"./node_modules/lightgallery.js/dist/js/lightgallery.min.js\");\n\n__webpack_require__(/*! lg-thumbnail.js */ \"./node_modules/lg-thumbnail.js/dist/lg-thumbnail.js\");\n\n__webpack_require__(/*! lg-zoom.js */ \"./node_modules/lg-zoom.js/dist/lg-zoom.js\");\n\n__webpack_require__(/*! lg-fullscreen.js */ \"./node_modules/lg-fullscreen.js/dist/lg-fullscreen.js\");\n\n__webpack_require__(/*! lg-pager.js */ \"./node_modules/lg-pager.js/dist/lg-pager.js\");\n\nCards = __webpack_require__(/*! ./cards.js */ \"./resources/js/cards.js\");\nLoader = __webpack_require__(/*! ./loader.js */ \"./resources/js/loader.js\");\n\nvar Gallery =\n/*#__PURE__*/\nfunction () {\n  function Gallery(strSelector) {\n    _classCallCheck(this, Gallery);\n\n    this.cards = new Cards();\n    this.loader = new Loader();\n    this.lg = document.getElementById(strSelector);\n    this.lgOptions = {\n      height: '100%',\n      width: '100%',\n      thumbnail: true,\n      animateThumb: true,\n      showThumbByDefault: true\n    };\n    this.lg.addEventListener('onBeforeSlide', function (e) {\n      i = document.getElementById('edit-icon');\n      if (i) i.parentNode.removeChild(i);\n    }, false);\n    var searchButton = document.getElementById('search-cards');\n\n    var _this = this;\n\n    searchButton.addEventListener('click', function (e) {\n      _this.updateGallery();\n    });\n    this.updateGallery();\n  }\n\n  _createClass(Gallery, [{\n    key: \"updateGallery\",\n    value: function updateGallery() {\n      var _this2 = this;\n\n      var _this = this;\n\n      while (this.lg.firstChild) {\n        this.lg.removeChild(this.lg.firstChild);\n      }\n\n      this.loader.startLoader();\n      var query = document.getElementById('card-query').value;\n      this.cards.fetchCards(query, function () {\n        _this.loader.removeLoader();\n\n        _this.buildCards();\n\n        _this.lg.addEventListener('onAfterSlide', function (e) {\n          var tb = document.getElementsByClassName('lg-toolbar')[0];\n          var id = _this.cards.cards[e.detail.index].id;\n          var url = \"/cards/\" + id + \"/edit\";\n          tb.insertAdjacentHTML('beforeend', \"<a id='edit-icon' class='lg-icon' href='\" + url + \"'>E</a>\");\n        });\n\n        lightGallery(_this2.lg, _this2.lgOptions);\n      }, function () {\n        console.log('TODO: implement Error Handler: Invalid query');\n      });\n    }\n  }, {\n    key: \"buildCards\",\n    value: function buildCards() {\n      var cardsHtml = \"\";\n      this.cards.cards.forEach(function (card) {\n        cardsHtml += \"<a id='card-\" + card.id + \"' href='/files/card.png'><img src='/files/card.png'/></a>\";\n      });\n      this.lg.insertAdjacentHTML('beforeend', cardsHtml);\n    }\n  }]);\n\n  return Gallery;\n}();\n\nnew Gallery('animated-thumbnails'); // console.log('starting');\n// lightGallery(document.getElementById('animated-thumbnails'), {\n//   thumbnail:true\n// });\n// console.log('done');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvZ2FsbGVyeS5qcz9lMjYzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJDYXJkcyIsIkxvYWRlciIsIkdhbGxlcnkiLCJzdHJTZWxlY3RvciIsImNhcmRzIiwibG9hZGVyIiwibGciLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwibGdPcHRpb25zIiwiaGVpZ2h0Iiwid2lkdGgiLCJ0aHVtYm5haWwiLCJhbmltYXRlVGh1bWIiLCJzaG93VGh1bWJCeURlZmF1bHQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJzZWFyY2hCdXR0b24iLCJfdGhpcyIsInVwZGF0ZUdhbGxlcnkiLCJmaXJzdENoaWxkIiwic3RhcnRMb2FkZXIiLCJxdWVyeSIsInZhbHVlIiwiZmV0Y2hDYXJkcyIsInJlbW92ZUxvYWRlciIsImJ1aWxkQ2FyZHMiLCJ0YiIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpZCIsImRldGFpbCIsImluZGV4IiwidXJsIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwibGlnaHRHYWxsZXJ5IiwiY29uc29sZSIsImxvZyIsImNhcmRzSHRtbCIsImZvckVhY2giLCJjYXJkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQUEsbUJBQU8sQ0FBQywrR0FBRCxDQUFQOztBQUNBQSxtQkFBTyxDQUFDLDRFQUFELENBQVA7O0FBQ0FBLG1CQUFPLENBQUMsNkRBQUQsQ0FBUDs7QUFDQUEsbUJBQU8sQ0FBQywrRUFBRCxDQUFQOztBQUNBQSxtQkFBTyxDQUFDLGdFQUFELENBQVA7O0FBRUFDLEtBQUssR0FBR0QsbUJBQU8sQ0FBQywyQ0FBRCxDQUFmO0FBQ0FFLE1BQU0sR0FBR0YsbUJBQU8sQ0FBQyw2Q0FBRCxDQUFoQjs7SUFFTUcsTzs7O0FBRUosbUJBQVlDLFdBQVosRUFBeUI7QUFBQTs7QUFDdkIsU0FBS0MsS0FBTCxHQUFhLElBQUlKLEtBQUosRUFBYjtBQUNBLFNBQUtLLE1BQUwsR0FBYyxJQUFJSixNQUFKLEVBQWQ7QUFDQSxTQUFLSyxFQUFMLEdBQVVDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QkwsV0FBeEIsQ0FBVjtBQUVBLFNBQUtNLFNBQUwsR0FBaUI7QUFDZkMsWUFBTSxFQUFFLE1BRE87QUFFZkMsV0FBSyxFQUFFLE1BRlE7QUFHZkMsZUFBUyxFQUFDLElBSEs7QUFJZkMsa0JBQVksRUFBRSxJQUpDO0FBS2ZDLHdCQUFrQixFQUFFO0FBTEwsS0FBakI7QUFRQSxTQUFLUixFQUFMLENBQVFTLGdCQUFSLENBQXlCLGVBQXpCLEVBQTBDLFVBQVNDLENBQVQsRUFBVztBQUNuREMsT0FBQyxHQUFHVixRQUFRLENBQUNDLGNBQVQsQ0FBd0IsV0FBeEIsQ0FBSjtBQUNBLFVBQUlTLENBQUosRUFBT0EsQ0FBQyxDQUFDQyxVQUFGLENBQWFDLFdBQWIsQ0FBeUJGLENBQXpCO0FBQ1IsS0FIRCxFQUdHLEtBSEg7QUFLQSxRQUFNRyxZQUFZLEdBQUdiLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixjQUF4QixDQUFyQjs7QUFDQSxRQUFJYSxLQUFLLEdBQUcsSUFBWjs7QUFDQUQsZ0JBQVksQ0FBQ0wsZ0JBQWIsQ0FBOEIsT0FBOUIsRUFBdUMsVUFBU0MsQ0FBVCxFQUFZO0FBQ2pESyxXQUFLLENBQUNDLGFBQU47QUFDRCxLQUZEO0FBR0EsU0FBS0EsYUFBTDtBQUVEOzs7O29DQUVlO0FBQUE7O0FBQ2QsVUFBSUQsS0FBSyxHQUFHLElBQVo7O0FBQ0EsYUFBTyxLQUFLZixFQUFMLENBQVFpQixVQUFmLEVBQTJCO0FBQ3pCLGFBQUtqQixFQUFMLENBQVFhLFdBQVIsQ0FBb0IsS0FBS2IsRUFBTCxDQUFRaUIsVUFBNUI7QUFDRDs7QUFDRCxXQUFLbEIsTUFBTCxDQUFZbUIsV0FBWjtBQUNBLFVBQU1DLEtBQUssR0FBR2xCLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixZQUF4QixFQUFzQ2tCLEtBQXBEO0FBQ0EsV0FBS3RCLEtBQUwsQ0FBV3VCLFVBQVgsQ0FBc0JGLEtBQXRCLEVBQTZCLFlBQU07QUFDakNKLGFBQUssQ0FBQ2hCLE1BQU4sQ0FBYXVCLFlBQWI7O0FBQ0FQLGFBQUssQ0FBQ1EsVUFBTjs7QUFFQVIsYUFBSyxDQUFDZixFQUFOLENBQVNTLGdCQUFULENBQTBCLGNBQTFCLEVBQTBDLFVBQVNDLENBQVQsRUFBWTtBQUNwRCxjQUFJYyxFQUFFLEdBQUd2QixRQUFRLENBQUN3QixzQkFBVCxDQUFnQyxZQUFoQyxFQUE4QyxDQUE5QyxDQUFUO0FBQ0EsY0FBSUMsRUFBRSxHQUFHWCxLQUFLLENBQUNqQixLQUFOLENBQVlBLEtBQVosQ0FBa0JZLENBQUMsQ0FBQ2lCLE1BQUYsQ0FBU0MsS0FBM0IsRUFBa0NGLEVBQTNDO0FBQ0EsY0FBSUcsR0FBRyxHQUFHLFlBQVlILEVBQVosR0FBaUIsT0FBM0I7QUFDQUYsWUFBRSxDQUFDTSxrQkFBSCxDQUFzQixXQUF0QixFQUNJLDZDQUE2Q0QsR0FBN0MsR0FBbUQsU0FEdkQ7QUFFRCxTQU5EOztBQVFBRSxvQkFBWSxDQUFDLE1BQUksQ0FBQy9CLEVBQU4sRUFBVSxNQUFJLENBQUNHLFNBQWYsQ0FBWjtBQUNELE9BYkQsRUFhRyxZQUFPO0FBQ1I2QixlQUFPLENBQUNDLEdBQVIsQ0FBWSw4Q0FBWjtBQUNELE9BZkQ7QUFnQkQ7OztpQ0FFWTtBQUNYLFVBQUlDLFNBQVMsR0FBRyxFQUFoQjtBQUNBLFdBQUtwQyxLQUFMLENBQVdBLEtBQVgsQ0FBaUJxQyxPQUFqQixDQUF5QixVQUFBQyxJQUFJLEVBQUk7QUFDL0JGLGlCQUFTLElBQUksaUJBQWlCRSxJQUFJLENBQUNWLEVBQXRCLEdBQTJCLDJEQUF4QztBQUNELE9BRkQ7QUFHQSxXQUFLMUIsRUFBTCxDQUFROEIsa0JBQVIsQ0FBMkIsV0FBM0IsRUFBd0NJLFNBQXhDO0FBQ0Q7Ozs7OztBQUdILElBQUl0QyxPQUFKLENBQVkscUJBQVosRSxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvZ2FsbGVyeS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2xpZ2h0Z2FsbGVyeS5qcy9kaXN0L2pzL2xpZ2h0Z2FsbGVyeS5taW4uanMnKTtcbnJlcXVpcmUoJ2xnLXRodW1ibmFpbC5qcycpO1xucmVxdWlyZSgnbGctem9vbS5qcycpO1xucmVxdWlyZSgnbGctZnVsbHNjcmVlbi5qcycpO1xucmVxdWlyZSgnbGctcGFnZXIuanMnKTtcblxuQ2FyZHMgPSByZXF1aXJlKCcuL2NhcmRzLmpzJyk7XG5Mb2FkZXIgPSByZXF1aXJlKCcuL2xvYWRlci5qcycpO1xuXG5jbGFzcyBHYWxsZXJ5IHtcblxuICBjb25zdHJ1Y3RvcihzdHJTZWxlY3Rvcikge1xuICAgIHRoaXMuY2FyZHMgPSBuZXcgQ2FyZHM7XG4gICAgdGhpcy5sb2FkZXIgPSBuZXcgTG9hZGVyO1xuICAgIHRoaXMubGcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzdHJTZWxlY3Rvcik7XG5cbiAgICB0aGlzLmxnT3B0aW9ucyA9IHtcbiAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgIHRodW1ibmFpbDp0cnVlLFxuICAgICAgYW5pbWF0ZVRodW1iOiB0cnVlLFxuICAgICAgc2hvd1RodW1iQnlEZWZhdWx0OiB0cnVlXG4gICAgfTtcblxuICAgIHRoaXMubGcuYWRkRXZlbnRMaXN0ZW5lcignb25CZWZvcmVTbGlkZScsIGZ1bmN0aW9uKGUpe1xuICAgICAgaSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlZGl0LWljb24nKTtcbiAgICAgIGlmIChpKSBpLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaSk7XG4gICAgfSwgZmFsc2UpO1xuXG4gICAgY29uc3Qgc2VhcmNoQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaC1jYXJkcycpO1xuICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgc2VhcmNoQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgX3RoaXMudXBkYXRlR2FsbGVyeSgpO1xuICAgIH0pO1xuICAgIHRoaXMudXBkYXRlR2FsbGVyeSgpO1xuXG4gIH1cblxuICB1cGRhdGVHYWxsZXJ5KCkge1xuICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgd2hpbGUgKHRoaXMubGcuZmlyc3RDaGlsZCkge1xuICAgICAgdGhpcy5sZy5yZW1vdmVDaGlsZCh0aGlzLmxnLmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICB0aGlzLmxvYWRlci5zdGFydExvYWRlcigpO1xuICAgIGNvbnN0IHF1ZXJ5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhcmQtcXVlcnknKS52YWx1ZTtcbiAgICB0aGlzLmNhcmRzLmZldGNoQ2FyZHMocXVlcnksICgpID0+IHtcbiAgICAgIF90aGlzLmxvYWRlci5yZW1vdmVMb2FkZXIoKTtcbiAgICAgIF90aGlzLmJ1aWxkQ2FyZHMoKTtcblxuICAgICAgX3RoaXMubGcuYWRkRXZlbnRMaXN0ZW5lcignb25BZnRlclNsaWRlJywgZnVuY3Rpb24oZSkge1xuICAgICAgICBsZXQgdGIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdsZy10b29sYmFyJylbMF07XG4gICAgICAgIGxldCBpZCA9IF90aGlzLmNhcmRzLmNhcmRzW2UuZGV0YWlsLmluZGV4XS5pZDtcbiAgICAgICAgbGV0IHVybCA9IFwiL2NhcmRzL1wiICsgaWQgKyBcIi9lZGl0XCI7XG4gICAgICAgIHRiLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJyxcbiAgICAgICAgICAgIFwiPGEgaWQ9J2VkaXQtaWNvbicgY2xhc3M9J2xnLWljb24nIGhyZWY9J1wiICsgdXJsICsgXCInPkU8L2E+XCIpO1xuICAgICAgfSk7XG5cbiAgICAgIGxpZ2h0R2FsbGVyeSh0aGlzLmxnLCB0aGlzLmxnT3B0aW9ucyk7XG4gICAgfSwgKCkgPT4gIHtcbiAgICAgIGNvbnNvbGUubG9nKCdUT0RPOiBpbXBsZW1lbnQgRXJyb3IgSGFuZGxlcjogSW52YWxpZCBxdWVyeScpO1xuICAgIH0pO1xuICB9XG5cbiAgYnVpbGRDYXJkcygpIHtcbiAgICBsZXQgY2FyZHNIdG1sID0gXCJcIjtcbiAgICB0aGlzLmNhcmRzLmNhcmRzLmZvckVhY2goY2FyZCA9PiB7XG4gICAgICBjYXJkc0h0bWwgKz0gXCI8YSBpZD0nY2FyZC1cIiArIGNhcmQuaWQgKyBcIicgaHJlZj0nL2ZpbGVzL2NhcmQucG5nJz48aW1nIHNyYz0nL2ZpbGVzL2NhcmQucG5nJy8+PC9hPlwiO1xuICAgIH0pO1xuICAgIHRoaXMubGcuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBjYXJkc0h0bWwpO1xuICB9XG59XG5cbm5ldyBHYWxsZXJ5KCdhbmltYXRlZC10aHVtYm5haWxzJyk7XG5cbi8vIGNvbnNvbGUubG9nKCdzdGFydGluZycpO1xuLy8gbGlnaHRHYWxsZXJ5KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhbmltYXRlZC10aHVtYm5haWxzJyksIHtcbi8vICAgdGh1bWJuYWlsOnRydWVcbi8vIH0pO1xuLy8gY29uc29sZS5sb2coJ2RvbmUnKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/gallery.js\n");

/***/ }),

/***/ "./resources/js/loader.js":
/*!********************************!*\
  !*** ./resources/js/loader.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nS = __webpack_require__(/*! spin.js */ \"./node_modules/spin.js/spin.js\").Spinner;\n\nvar Loader =\n/*#__PURE__*/\nfunction () {\n  function Loader() {\n    _classCallCheck(this, Loader);\n\n    this.opts = {\n      lines: 14,\n      // The number of lines to draw\n      length: 22,\n      // The length of each line\n      width: 8,\n      // The line thickness\n      radius: 25,\n      // The radius of the inner circle\n      scale: 1,\n      // Scales overall size of the spinner\n      corners: 1,\n      // Corner roundness (0..1)\n      color: '#7f7f7f',\n      // CSS color or array of colors\n      fadeColor: 'transparent',\n      // CSS color or array of colors\n      speed: 1,\n      // Rounds per second\n      rotate: 0,\n      // The rotation offset\n      animation: 'spinner-line-fade-quick',\n      // The CSS animation name for the lines\n      direction: 1,\n      // 1: clockwise, -1: counterclockwise\n      zIndex: 2e9,\n      // The z-index (defaults to 2000000000)\n      className: 'spinner',\n      // The CSS class to assign to the spinner\n      top: '50%',\n      // Top position relative to parent\n      left: '50%',\n      // Left position relative to parent\n      shadow: '0 0 1px transparent',\n      // Box-shadow for the lines\n      position: 'absolute' // Element positioning\n\n    };\n  }\n\n  _createClass(Loader, [{\n    key: \"initLoader\",\n    value: function initLoader() {\n      this.spinner = new S(this.opts);\n    }\n  }, {\n    key: \"removeLoader\",\n    value: function removeLoader() {\n      this.spinner.stop();\n    }\n  }, {\n    key: \"startLoader\",\n    value: function startLoader() {\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.getElementById('body');\n\n      if (!this.spinner) {\n        this.initLoader();\n      }\n\n      this.spinner.spin(parent);\n    }\n  }]);\n\n  return Loader;\n}();\n\nmodule.exports = Loader;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvbG9hZGVyLmpzPzM5MzkiXSwibmFtZXMiOlsiUyIsInJlcXVpcmUiLCJTcGlubmVyIiwiTG9hZGVyIiwib3B0cyIsImxpbmVzIiwibGVuZ3RoIiwid2lkdGgiLCJyYWRpdXMiLCJzY2FsZSIsImNvcm5lcnMiLCJjb2xvciIsImZhZGVDb2xvciIsInNwZWVkIiwicm90YXRlIiwiYW5pbWF0aW9uIiwiZGlyZWN0aW9uIiwiekluZGV4IiwiY2xhc3NOYW1lIiwidG9wIiwibGVmdCIsInNoYWRvdyIsInBvc2l0aW9uIiwic3Bpbm5lciIsInN0b3AiLCJwYXJlbnQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiaW5pdExvYWRlciIsInNwaW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQUEsQ0FBQyxHQUFHQyxtQkFBTyxDQUFDLCtDQUFELENBQVAsQ0FBbUJDLE9BQXZCOztJQUVNQyxNOzs7QUFFSixvQkFBYztBQUFBOztBQUNaLFNBQUtDLElBQUwsR0FBWTtBQUNWQyxXQUFLLEVBQUUsRUFERztBQUNDO0FBQ1hDLFlBQU0sRUFBRSxFQUZFO0FBRUU7QUFDWkMsV0FBSyxFQUFFLENBSEc7QUFHQTtBQUNWQyxZQUFNLEVBQUUsRUFKRTtBQUlFO0FBQ1pDLFdBQUssRUFBRSxDQUxHO0FBS0E7QUFDVkMsYUFBTyxFQUFFLENBTkM7QUFNRTtBQUNaQyxXQUFLLEVBQUUsU0FQRztBQU9RO0FBQ2xCQyxlQUFTLEVBQUUsYUFSRDtBQVFnQjtBQUMxQkMsV0FBSyxFQUFFLENBVEc7QUFTQTtBQUNWQyxZQUFNLEVBQUUsQ0FWRTtBQVVDO0FBQ1hDLGVBQVMsRUFBRSx5QkFYRDtBQVc0QjtBQUN0Q0MsZUFBUyxFQUFFLENBWkQ7QUFZSTtBQUNkQyxZQUFNLEVBQUUsR0FiRTtBQWFHO0FBQ2JDLGVBQVMsRUFBRSxTQWREO0FBY1k7QUFDdEJDLFNBQUcsRUFBRSxLQWZLO0FBZUU7QUFDWkMsVUFBSSxFQUFFLEtBaEJJO0FBZ0JHO0FBQ2JDLFlBQU0sRUFBRSxxQkFqQkU7QUFpQnFCO0FBQy9CQyxjQUFRLEVBQUUsVUFsQkEsQ0FrQlc7O0FBbEJYLEtBQVo7QUFvQkQ7Ozs7aUNBRVk7QUFDWCxXQUFLQyxPQUFMLEdBQWUsSUFBSXZCLENBQUosQ0FBTSxLQUFLSSxJQUFYLENBQWY7QUFDRDs7O21DQUVjO0FBQ2IsV0FBS21CLE9BQUwsQ0FBYUMsSUFBYjtBQUNEOzs7a0NBRXFEO0FBQUEsVUFBMUNDLE1BQTBDLHVFQUFqQ0MsUUFBUSxDQUFDQyxjQUFULENBQXdCLE1BQXhCLENBQWlDOztBQUNwRCxVQUFJLENBQUMsS0FBS0osT0FBVixFQUFtQjtBQUNqQixhQUFLSyxVQUFMO0FBQ0Q7O0FBQ0QsV0FBS0wsT0FBTCxDQUFhTSxJQUFiLENBQWtCSixNQUFsQjtBQUNEOzs7Ozs7QUFJSEssTUFBTSxDQUFDQyxPQUFQLEdBQWlCNUIsTUFBakIiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvbG9hZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiUyA9IHJlcXVpcmUoJ3NwaW4uanMnKS5TcGlubmVyO1xuXG5jbGFzcyBMb2FkZXIge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMub3B0cyA9IHtcbiAgICAgIGxpbmVzOiAxNCwgLy8gVGhlIG51bWJlciBvZiBsaW5lcyB0byBkcmF3XG4gICAgICBsZW5ndGg6IDIyLCAvLyBUaGUgbGVuZ3RoIG9mIGVhY2ggbGluZVxuICAgICAgd2lkdGg6IDgsIC8vIFRoZSBsaW5lIHRoaWNrbmVzc1xuICAgICAgcmFkaXVzOiAyNSwgLy8gVGhlIHJhZGl1cyBvZiB0aGUgaW5uZXIgY2lyY2xlXG4gICAgICBzY2FsZTogMSwgLy8gU2NhbGVzIG92ZXJhbGwgc2l6ZSBvZiB0aGUgc3Bpbm5lclxuICAgICAgY29ybmVyczogMSwgLy8gQ29ybmVyIHJvdW5kbmVzcyAoMC4uMSlcbiAgICAgIGNvbG9yOiAnIzdmN2Y3ZicsIC8vIENTUyBjb2xvciBvciBhcnJheSBvZiBjb2xvcnNcbiAgICAgIGZhZGVDb2xvcjogJ3RyYW5zcGFyZW50JywgLy8gQ1NTIGNvbG9yIG9yIGFycmF5IG9mIGNvbG9yc1xuICAgICAgc3BlZWQ6IDEsIC8vIFJvdW5kcyBwZXIgc2Vjb25kXG4gICAgICByb3RhdGU6IDAsIC8vIFRoZSByb3RhdGlvbiBvZmZzZXRcbiAgICAgIGFuaW1hdGlvbjogJ3NwaW5uZXItbGluZS1mYWRlLXF1aWNrJywgLy8gVGhlIENTUyBhbmltYXRpb24gbmFtZSBmb3IgdGhlIGxpbmVzXG4gICAgICBkaXJlY3Rpb246IDEsIC8vIDE6IGNsb2Nrd2lzZSwgLTE6IGNvdW50ZXJjbG9ja3dpc2VcbiAgICAgIHpJbmRleDogMmU5LCAvLyBUaGUgei1pbmRleCAoZGVmYXVsdHMgdG8gMjAwMDAwMDAwMClcbiAgICAgIGNsYXNzTmFtZTogJ3NwaW5uZXInLCAvLyBUaGUgQ1NTIGNsYXNzIHRvIGFzc2lnbiB0byB0aGUgc3Bpbm5lclxuICAgICAgdG9wOiAnNTAlJywgLy8gVG9wIHBvc2l0aW9uIHJlbGF0aXZlIHRvIHBhcmVudFxuICAgICAgbGVmdDogJzUwJScsIC8vIExlZnQgcG9zaXRpb24gcmVsYXRpdmUgdG8gcGFyZW50XG4gICAgICBzaGFkb3c6ICcwIDAgMXB4IHRyYW5zcGFyZW50JywgLy8gQm94LXNoYWRvdyBmb3IgdGhlIGxpbmVzXG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyAvLyBFbGVtZW50IHBvc2l0aW9uaW5nXG4gICAgfTtcbiAgfVxuXG4gIGluaXRMb2FkZXIoKSB7XG4gICAgdGhpcy5zcGlubmVyID0gbmV3IFModGhpcy5vcHRzKTtcbiAgfVxuXG4gIHJlbW92ZUxvYWRlcigpIHtcbiAgICB0aGlzLnNwaW5uZXIuc3RvcCgpO1xuICB9XG5cbiAgc3RhcnRMb2FkZXIocGFyZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JvZHknKSkge1xuICAgIGlmICghdGhpcy5zcGlubmVyKSB7XG4gICAgICB0aGlzLmluaXRMb2FkZXIoKTtcbiAgICB9XG4gICAgdGhpcy5zcGlubmVyLnNwaW4ocGFyZW50KVxuICB9XG5cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBMb2FkZXI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/loader.js\n");

/***/ }),

/***/ 2:
/*!***************************************!*\
  !*** multi ./resources/js/gallery.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/ngrippa/workspace/gaya/resources/js/gallery.js */"./resources/js/gallery.js");


/***/ })

/******/ });